List of Oberon Error Numbers

N. Wirth / "20.6.87" / RC, JS "1.4.93" / NM "24.10.93" (iOP2 Compiler) / SHML "4.9.92" (Analyzer) / AS "18.2.99" (SharkOberon)

Incorrect use of language Oberon

  0	undeclared identifier
  1	multiply defined identifier
  2	illegal character in number
  3	illegal character in string
  4	identifier does not match procedure name
  5	comment not closed
  6	
  7	
  8	
  9	"=" expected
10	identifier expected 
11	
12	type definition starts with incorrect symbol
13	factor starts with incorrect symbol
14	statement starts with incorrect symbol
15	declaration followed by incorrect symbol
16	MODULE expected
17	
18	"." missing
19	"," missing
20	":" missing
21	
22	")" missing
23	"]" missing
24	"}" missing
25	OF missing
26	THEN missing
27	DO missing
28	TO missing
29	"(" missing
30	
31	
32	
33	
34	":=" missing
35	"," or OF expected
36	
37	
38	";" missing
39	
40	END missing
41	
42	
43	
44	UNTIL missing
45	
46	EXIT not within loop statement
47	illegally marked identifier
48	
49	
50	expression should be constant
51	constant not an integer
52	identifier does not denote a type
53	identifier does not denote a record type
54	result type of procedure is not a basic type
55	procedure call of a function
56	assignment to non-variable
57	pointer not bound to record or array type
58	recursive type definition
59	illegal open array parameter
60	wrong type of case label
61	inadmissible type of case label
62	case label defined more than once
63	illegal value of constant
64	more actual than formal parameters
65	fewer actual than formal parameters
66	element types of actual array and formal open array differ
67	actual parameter corresponding to open array is not an array
68	control variable must be integer
69	parameter must be an integer constant
70	
71	
72	
73	procedure must have level 0
74	
75	
76	
77	
78	
79	
80	index expression is not an integer
81	index out of specified bounds
82	indexed variable is not an array
83	undefined record field
84	dereferenced variable is not a pointer
85	guard or test type is not an extension of variable type
86	guard or testtype is not a pointer
87	guarded or tested variable is neither a pointer nor a VAR-parameter record
88	open array not allowed as variable, record field or array element
89	
90	
91
92	operand of IN not an integer, or not a set
93	set element type is not an integer
94	
95	
96	operand not applicable to (unary) +
97	operand not applicable to (unary) -
98	
99	for-step must not be 0
100	incompatible operands of dyadic operator
101	operand type inapplicable to *
102	operand type inapplicable to /
103	operand type inapplicable to DIV
104	operand type inapplicable to MOD
105	operand type inapplicable to +
106	operand type inapplicable to -
107	operand type inapplicable to = or #
108	operand type inapplicable to relation
109	
110	operand is not a type
111	operand inapplicable to (this) function
112	operand is not a variable
113	incompatible assignment
114	string too long to be assigned
115	parameter doesn't match
116	number of parameters doesn't match
117	result type doesn't match
118	export mark doesn't match with forward declaration
119	
120	type of expression following IF, WHILE, UNTIL or ASSERT is not BOOLEAN
121	called object is not a procedure (or is an interrupt procedure)
122	actual VAR-parameter is not a variable
123	type of actual parameter is not identical with that of formal VAR-parameter
124	type of result expression differs from that of procedure
125	type of case expression is neither INTEGER nor CHAR
126	
127	
128	unsatisfied forward reference
129	unsatisfied forward procedure
130	WITH clause does not specify a variable
131	LEN not applied to array
132	dimension in LEN too large or negative

150	key inconsistency of imported module
151	incorrect symbol file
152	symbol file of imported module not found
153	object or symbol file not opened (disk full?)
154	recursive import not allowed
155	generation of new symbol file not allowed


Limitations of implementation

200	not yet implemented
201	lower bound of set range greater than higher bound
202	set element greater than MAX(SET) or less than 0
203	number too large
204	product too large
205	division by zero
206	sum too large
207	difference too large
208	overflow in arithmetic shift
209	case range too large
210	code too long
211
212	string too long
213	too many cases in case statement
214	too many EXITs 
215	not enough registers: simplify expression
216	
217	parameter must be constant
218	illegal value of parameter  "(20 <= p < 256)"
219	illegal value of parameter  "(0 <= p < 16)"
220	illegal value of parameter
221	
222	too many global pointers
223	too many record types
224	too many pointer types
225	
226	too many exported and/or type-bound procedures
227	too many imported modules
228	too many exported structures
229	too many nested records for import
230	too many constants (strings) in module
231
232	too many commands in module
233	record extension hierarchy too high
234
235	
236	too many exported variables
240	identifier too long
241	string too long
242	address overflow
243	too many imported variables
250	
251
252	too many forwarded procs
253	too many exported records/vars
254	wrong alignment (use LONG() or ORD())
255	too many open dimensions
256	open arrays not allowed as value params
257	LOOPs too nested

Warnings

301	implicit type cast
302	guarded variable can be side-effected
303	can lead to wrong alignment if vars are added/removed

Assembler errors
400	Mnemonic expected
401	integer expected
402	label expected
403	label already used
404	Too many labels
405	register expected
406	immediate out of range
407	shift expected
408	shift out of range
409	SPSR or CPSR expected
410	register or immediate expected
411	undefined labels
412	ident expected
413	object must be global
414	must be procedure or variable
415	can't call undefined procs
416	character or string expected

Analyzer Warnings

900	never used
901	never set
902	used before set
903	set but never used
904	used as varpar, possibly not set
905	also declared in outer scope
906	access/assignment to intermediate
907	redefinition

Internal Errors
1000	Put1 imm too large
1001	Offset too large
1002	Fixup-value too big
