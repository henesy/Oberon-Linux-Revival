MODULE SoftFloat;

(**
===============================================================================

This C header file is part of the SoftFloat IEC/IEEE Floating-point
Arithmetic Package, Release 2a.

Written by John R. Hauser.  This work was made possible in part by the
International Computer Science Institute, located at Suite 600, 1947 Center
Street, Berkeley, California 94704.  Funding was partially provided by the
National Science Foundation under grant MIP-9311980.  The original version
of this code was written as part of a project to build a fixed-point vector
processor in collaboration with the University of California at Berkeley,
overseen by Profs. Nelson Morgan and John Wawrzynek.  More information
is available through the Web page `http://HTTP.CS.Berkeley.EDU/~jhauser/
arithmetic/SoftFloat.html'.

THIS SOFTWARE IS DISTRIBUTED AS IS, FOR FREE.  Although reasonable effort
has been made to avoid it, THIS SOFTWARE MAY CONTAIN FAULTS THAT WILL AT
TIMES RESULT IN INCORRECT BEHAVIOR.  USE OF THIS SOFTWARE IS RESTRICTED TO
PERSONS AND ORGANIZATIONS WHO CAN AND WILL TAKE FULL RESPONSIBILITY FOR ANY
AND ALL LOSSES, COSTS, OR OTHER PROBLEMS ARISING FROM ITS USE.

Derivative works are acceptable, even for commercial purposes, so long as
(1) they include prominent notice that the work is derivative, and (2) they
include prominent notice akin to these four paragraphs for those parts of
this code that are retained.

===============================================================================
*)

(*
	2014-05-03	p.m.;	commented out all SWI, called Kernel.SysHalt; not tested! 
				Procedure Call Convention not according to Oberon -> Traps don't show stack!
*)

IMPORT Kernel, SYSTEM;

CONST

	(* Software IEC/IEEE floating-point underflow tininess-detection mode. *)
	TininessAfterRounding* = 0;
	TininessBeforeRounding* = 1;

	(* Software IEC/IEEE floating-point rounding mode. *)
	RoundNearestEven* = 0;
	RoundDown* = 1;
	RoundUp* = 2;
	RoundToZero* = 3;

	(* Software IEC/IEEE floating-point exception flags. *)
	Invalid* = 1;
	DivByZero* = 2;
	Overflow* = 4;
	Underflow* = 8;
	Inexact* = 16;
	
VAR
	RoundingMode* : SHORTINT; (** Software IEC/IEEE floating-point rounding mode. *)
	ExceptionFlags* : SHORTINT; (** Software IEC/IEEE floating-point exception flags. *)
	DetectTininess* : SHORTINT; (** Software IEC/IEEE floating-point underflow tininess-detection mode. *)
	OverflowExceptions* : BOOLEAN; (** FALSE -> Overflow/Underflow are ignored *)

SysHalt: Kernel.Proc;

PROCEDURE Halt;
BEGIN
	SysHalt;
END Halt;

PROCEDURE UDIVSI3;
CODE
LUDIVIDE				(* R0 = R0 / R1; R1 = R0 % R1 *)
	EOR     R0, R1, R0 
	EOR     R1, R0, R1 
	EOR     R0, R1, R0 
					(* R0 = R1 / R0; R1 = R1 % R0 *)
	CMP	R0, 1
(*	SWICC	10			(* Div by zero *)
*)
	MOV	R7, 10
	BLCC	Halt

	BEQ	LDIVIDEL0
	MOV	R12, 0
	MOVS	R1, R1
	BPL	LDIVIDEL1
	ORR	R12, R12, 20000000H	(* R12 BIT 0X20000000 = -VE R1 *)
	MOVS	R1, R1, LSR 1
	ORRCS	R12, R12, 10000000H	(* R12 BIT 0X10000000 = BIT 0 OF R1 *)
	B	LDIVIDEL1

LDIVIDEL0				(* R0 == 1 *)
	MOV	R0, R1
	MOV	R1, 0
	MOV	PC, LR

LDIVIDEL1
	MOV	R2, 1
	MOV	R3, 0

	CMP	R1, R0
	BCC	LDIVIDEB0
	CMP	R1, R0, LSL 1
	BCC	LDIVIDEB1
	CMP	R1, R0, LSL 2
	BCC	LDIVIDEB2
	CMP	R1, R0, LSL 3
	BCC	LDIVIDEB3
	CMP	R1, R0, LSL 4
	BCC	LDIVIDEB4
	CMP	R1, R0, LSL 5
	BCC	LDIVIDEB5
	CMP	R1, R0, LSL 6
	BCC	LDIVIDEB6
	CMP	R1, R0, LSL 7
	BCC	LDIVIDEB7
	CMP	R1, R0, LSL 8
	BCC	LDIVIDEB8
	CMP	R1, R0, LSL 9
	BCC	LDIVIDEB9
	CMP	R1, R0, LSL 10
	BCC	LDIVIDEB10
	CMP	R1, R0, LSL 11
	BCC	LDIVIDEB11
	CMP	R1, R0, LSL 12
	BCC	LDIVIDEB12
	CMP	R1, R0, LSL 13
	BCC	LDIVIDEB13
	CMP	R1, R0, LSL 14
	BCC	LDIVIDEB14
	CMP	R1, R0, LSL 15
	BCC	LDIVIDEB15
	CMP	R1, R0, LSL 16
	BCC	LDIVIDEB16
	CMP	R1, R0, LSL 17
	BCC	LDIVIDEB17
	CMP	R1, R0, LSL 18
	BCC	LDIVIDEB18
	CMP	R1, R0, LSL 19
	BCC	LDIVIDEB19
	CMP	R1, R0, LSL 20
	BCC	LDIVIDEB20
	CMP	R1, R0, LSL 21
	BCC	LDIVIDEB21
	CMP	R1, R0, LSL 22
	BCC	LDIVIDEB22
	CMP	R1, R0, LSL 23
	BCC	LDIVIDEB23
	CMP	R1, R0, LSL 24
	BCC	LDIVIDEB24
	CMP	R1, R0, LSL 25
	BCC	LDIVIDEB25
	CMP	R1, R0, LSL 26
	BCC	LDIVIDEB26
	CMP	R1, R0, LSL 27
	BCC	LDIVIDEB27
	CMP	R1, R0, LSL 28
	BCC	LDIVIDEB28
	CMP	R1, R0, LSL 29
	BCC	LDIVIDEB29
	CMP	R1, R0, LSL 30
	BCC	LDIVIDEB30
	CMP	R1, R0, LSL 31
	SUBCS	R1, R1,R0, LSL 31
	ADDCS	R3, R3,R2, LSL 31
	CMP	R1, R0, LSL 30
	SUBCS	R1, R1,R0, LSL 30
	ADDCS	R3, R3,R2, LSL 30
LDIVIDEB30
	CMP	R1, R0, LSL 29
	SUBCS	R1, R1,R0, LSL 29
	ADDCS	R3, R3,R2, LSL 29
LDIVIDEB29
	CMP	R1, R0, LSL 28
	SUBCS	R1, R1,R0, LSL 28
	ADDCS	R3, R3,R2, LSL 28
LDIVIDEB28
	CMP	R1, R0, LSL 27
	SUBCS	R1, R1,R0, LSL 27
	ADDCS	R3, R3,R2, LSL 27
LDIVIDEB27
	CMP	R1, R0, LSL 26
	SUBCS	R1, R1,R0, LSL 26
	ADDCS	R3, R3,R2, LSL 26
LDIVIDEB26
	CMP	R1, R0, LSL 25
	SUBCS	R1, R1,R0, LSL 25
	ADDCS	R3, R3,R2, LSL 25
LDIVIDEB25
	CMP	R1, R0, LSL 24
	SUBCS	R1, R1,R0, LSL 24
	ADDCS	R3, R3,R2, LSL 24
LDIVIDEB24
	CMP	R1, R0, LSL 23
	SUBCS	R1, R1,R0, LSL 23
	ADDCS	R3, R3,R2, LSL 23
LDIVIDEB23
	CMP	R1, R0, LSL 22
	SUBCS	R1, R1,R0, LSL 22
	ADDCS	R3, R3,R2, LSL 22
LDIVIDEB22
	CMP	R1, R0, LSL 21
	SUBCS	R1, R1,R0, LSL 21
	ADDCS	R3, R3,R2, LSL 21
LDIVIDEB21
	CMP	R1, R0, LSL 20
	SUBCS	R1, R1,R0, LSL 20
	ADDCS	R3, R3,R2, LSL 20
LDIVIDEB20
	CMP	R1, R0, LSL 19
	SUBCS	R1, R1,R0, LSL 19
	ADDCS	R3, R3,R2, LSL 19
LDIVIDEB19
	CMP	R1, R0, LSL 18
	SUBCS	R1, R1,R0, LSL 18
	ADDCS	R3, R3,R2, LSL 18
LDIVIDEB18
	CMP	R1, R0, LSL 17
	SUBCS	R1, R1,R0, LSL 17
	ADDCS	R3, R3,R2, LSL 17
LDIVIDEB17
	CMP	R1, R0, LSL 16
	SUBCS	R1, R1,R0, LSL 16
	ADDCS	R3, R3,R2, LSL 16
LDIVIDEB16
	CMP	R1, R0, LSL 15
	SUBCS	R1, R1,R0, LSL 15
	ADDCS	R3, R3,R2, LSL 15
LDIVIDEB15
	CMP	R1, R0, LSL 14
	SUBCS	R1, R1,R0, LSL 14
	ADDCS	R3, R3,R2, LSL 14
LDIVIDEB14
	CMP	R1, R0, LSL 13
	SUBCS	R1, R1,R0, LSL 13
	ADDCS	R3, R3,R2, LSL 13
LDIVIDEB13
	CMP	R1, R0, LSL 12
	SUBCS	R1, R1,R0, LSL 12
	ADDCS	R3, R3,R2, LSL 12
LDIVIDEB12
	CMP	R1, R0, LSL 11
	SUBCS	R1, R1,R0, LSL 11
	ADDCS	R3, R3,R2, LSL 11
LDIVIDEB11
	CMP	R1, R0, LSL 10
	SUBCS	R1, R1,R0, LSL 10
	ADDCS	R3, R3,R2, LSL 10
LDIVIDEB10
	CMP	R1, R0, LSL 9
	SUBCS	R1, R1,R0, LSL 9
	ADDCS	R3, R3,R2, LSL 9
LDIVIDEB9
	CMP	R1, R0, LSL 8
	SUBCS	R1, R1,R0, LSL 8
	ADDCS	R3, R3,R2, LSL 8
LDIVIDEB8
	CMP	R1, R0, LSL 7
	SUBCS	R1, R1,R0, LSL 7
	ADDCS	R3, R3,R2, LSL 7
LDIVIDEB7
	CMP	R1, R0, LSL 6
	SUBCS	R1, R1,R0, LSL 6
	ADDCS	R3, R3,R2, LSL 6
LDIVIDEB6
	CMP	R1, R0, LSL 5
	SUBCS	R1, R1,R0, LSL 5
	ADDCS	R3, R3,R2, LSL 5
LDIVIDEB5
	CMP	R1, R0, LSL 4
	SUBCS	R1, R1,R0, LSL 4
	ADDCS	R3, R3,R2, LSL 4
LDIVIDEB4
	CMP	R1, R0, LSL 3
	SUBCS	R1, R1,R0, LSL 3
	ADDCS	R3, R3,R2, LSL 3
LDIVIDEB3
	CMP	R1, R0, LSL 2
	SUBCS	R1, R1,R0, LSL 2
	ADDCS	R3, R3,R2, LSL 2
LDIVIDEB2
	CMP	R1, R0, LSL 1
	SUBCS	R1, R1,R0, LSL 1
	ADDCS	R3, R3,R2, LSL 1
LDIVIDEB1
	CMP	R1, R0
	SUBCS	R1, R1, R0
	ADDCS	R3, R3, R2
LDIVIDEB0

	TST	R12, 20000000H
	BNE	LUDIVIDEL1
	MOV	R0, R3
	CMP	R12, 0
	RSBMI	R1, R1, 0
	MOVS	R12, R12, LSL 1
	BICMI	R0, R0, 80000000H	(* FIX INCASE WE DIVIDED 80000000H *)
	RSBMI	R0, R0, 0
	MOV	PC, LR

LUDIVIDEL1
	TST	R12, 10000000H
	MOV	R1, R1, LSL 1
	ORRNE	R1, R1, 1
	MOV	R3, R3, LSL 1
	CMP	R1, R0
	SUBCS	R1, R1, R0
	ADDCS	R3, R3, R2
	MOV	R0, R3
	MOV	PC, LR
END UDIVSI3;



PROCEDURE ADD64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 4
	MOV	R12, R0
	MOV	R4, R1
	LDR	R1, [R11, 4]
	LDR	R14, [R11, 8]
	ADD	R6, R4, R3
	STR	R6, [R11, -28]
	LDR	R6, [R11, -28]
	STR	R6, [R14, 0]
	ADD	R5, R12, R2
	LDR	R6, [R11, -28]
	CMP	R6, R4
	MOVCS	R6, 0
	MOVCC	R6, 1
	ADD	R6, R6, R5
	STR	R6, [R1, 0]
L57
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}
END ADD64;

PROCEDURE ADD96;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R9, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R12, R0
	MOV	R6, R1
	MOV	R7, R2
	LDR	R2, [R11, 4]
	LDR	R1, [R11, 8]
	LDR	R14, [R11, 12]
	LDR	R4, [R11, 16]
	LDR	R5, [R11, 20]
	ADD	R8, R7, R1
	STR	R8, [R11, -48]
	LDR	R8, [R11, -48]
	CMP	R8, R7
	MOVCS	R8, 0
	MOVCC	R8, 1
	MOV	R9, R8
	STRB	R9, [R11, -50]
	ADD	R8, R6, R2
	STR	R8, [R11, -44]
	LDR	R8, [R11, -44]
	CMP	R8, R6
	MOVCS	R8, 0
	MOVCC	R8, 1
	MOV	R9, R8
	STRB	R9, [R11, -49]
	ADD	R8, R12, R3
	STR	R8, [R11, -40]
	LDRB	R8, [R11, -50]
	MOV	R9, R8, LSL 24
	MOV	R8, R9, ASR 24
	LDR	R9, [R11, -44]
	ADD	R8, R9, R8
	STR	R8, [R11, -44]
	LDRB	R8, [R11, -50]
	MOV	R9, R8, LSL 24
	MOV	R8, R9, ASR 24
	LDR	R9, [R11, -44]
	CMP	R9, R8
	MOVCS	R8, 0
	MOVCC	R8, 1
	LDR	R9, [R11, -40]
	ADD	R8, R8, R9
	STR	R8, [R11, -40]
	LDRB	R8, [R11, -49]
	MOV	R9, R8, LSL 24
	MOV	R8, R9, ASR 24
	LDR	R9, [R11, -40]
	ADD	R8, R9, R8
	STR	R8, [R11, -40]
	LDR	R8, [R11, -48]
	STR	R8, [R5, 0]
	LDR	R8, [R11, -44]
	STR	R8, [R4, 0]
	LDR	R8, [R11, -40]
	STR	R8, [R14, 0]
L58
	LDMEA	R11, {R4, R5, R6, R7, R8, R9, R11, R13, R15}
END ADD96;

PROCEDURE SUB64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R12, R0
	MOV	R14, R1
	MOV	R4, R3
	LDR	R3, [R11, 4]
	LDR	R1, [R11, 8]
	RSB	R6, R4, R14
	STR	R6, [R1, 0]
	RSB	R5, R2, R12
	CMP	R14, R4
	MOVCS	R6, 0
	MOVCC	R6, 1
	RSB	R7, R6, R5
	STR	R7, [R3, 0]
L59
	LDMEA	R11, {R4, R5, R6, R7, R11, R13, R15}
END SUB64;

PROCEDURE SUB96;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R9, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R12, R0
	MOV	R4, R1
	MOV	R5, R2
	LDR	R6, [R11, 4]
	LDR	R7, [R11, 8]
	LDR	R2, [R11, 12]
	LDR	R1, [R11, 16]
	LDR	R14, [R11, 20]
	RSB	R8, R7, R5
	STR	R8, [R11, -48]
	CMP	R5, R7
	MOVCS	R8, 0
	MOVCC	R8, 1
	MOV	R9, R8
	STRB	R9, [R11, -50]
	RSB	R8, R6, R4
	STR	R8, [R11, -44]
	CMP	R4, R6
	MOVCS	R8, 0
	MOVCC	R8, 1
	MOV	R9, R8
	STRB	R9, [R11, -49]
	RSB	R8, R3, R12
	STR	R8, [R11, -40]
	LDRB	R8, [R11, -50]
	MOV	R9, R8, LSL 24
	MOV	R8, R9, ASR 24
	LDR	R9, [R11, -44]
	CMP	R9, R8
	MOVCS	R8, 0
	MOVCC	R8, 1
	LDR	R9, [R11, -40]
	RSB	R8, R8, R9
	STR	R8, [R11, -40]
	LDRB	R8, [R11, -50]
	MOV	R9, R8, LSL 24
	MOV	R8, R9, ASR 24
	LDR	R9, [R11, -44]
	RSB	R8, R8, R9
	STR	R8, [R11, -44]
	LDRB	R8, [R11, -49]
	MOV	R9, R8, LSL 24
	MOV	R8, R9, ASR 24
	LDR	R9, [R11, -40]
	RSB	R8, R8, R9
	STR	R8, [R11, -40]
	LDR	R8, [R11, -48]
	STR	R8, [R14, 0]
	LDR	R8, [R11, -44]
	STR	R8, [R1, 0]
	LDR	R8, [R11, -40]
	STR	R8, [R2, 0]
L60
	LDMEA	R11, {R4, R5, R6, R7, R8, R9, R11, R13, R15}
END SUB96;

PROCEDURE MUL32TO64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 24
	MOV	R12, R0
	STRB	R12, [R11, -28]
	MOV	R4, R12, ASR 8
	STRB	R4, [R11, -27]
	MOV	R4, R12, LSR 16
	STRB	R4, [R11, -26]
	MOV	R4, R4, ASR 8
	STRB	R4, [R11, -25]
	STRB	R1, [R11, -32]
	MOV	R4, R1, ASR 8
	STRB	R4, [R11, -31]
	MOV	R4, R1, LSR 16
	STRB	R4, [R11, -30]
	MOV	R4, R4, ASR 8
	STRB	R4, [R11, -29]
	LDRH	R4, [R11, -28]	
	MOV	R5, R4, LSL 16
	MOV	R4, R5, LSR 16
	LDRH	R5, [R11, -32]	
	MOV	R6, R5, LSL 16
	MOV	R5, R6, LSR 16
	MUL	R4, R5, R4
	STR	R4, [R11, -48]
	LDRH	R4, [R11, -28]	
	MOV	R5, R4, LSL 16
	MOV	R4, R5, LSR 16
	LDRH	R5, [R11, -30]	
	MOV	R6, R5, LSL 16
	MOV	R5, R6, LSR 16
	MUL	R4, R5, R4
	STR	R4, [R11, -40]
	LDRH	R4, [R11, -26]	
	MOV	R5, R4, LSL 16
	MOV	R4, R5, LSR 16
	LDRH	R5, [R11, -32]	
	MOV	R6, R5, LSL 16
	MOV	R5, R6, LSR 16
	MUL	R4, R5, R4
	STR	R4, [R11, -44]
	LDRH	R4, [R11, -26]	
	MOV	R5, R4, LSL 16
	MOV	R4, R5, LSR 16
	LDRH	R5, [R11, -30]	
	MOV	R6, R5, LSL 16
	MOV	R5, R6, LSR 16
	MUL	R4, R5, R4
	STR	R4, [R11, -36]
	LDR	R4, [R11, -40]
	LDR	R5, [R11, -44]
	ADD	R4, R4, R5
	STR	R4, [R11, -40]
	LDR	R4, [R11, -40]
	MOV	R14, R4, LSR 16
	LDR	R4, [R11, -40]
	LDR	R5, [R11, -44]
	CMP	R4, R5
	BCS	L62
	LDR	R5, [R11, -36]
	ADD	R4, R5, 65536
	ADD	R4, R4, R14
	B	L63
L62
	LDR	R5, [R11, -36]
	ADD	R4, R14, R5
L63
	STR	R4, [R11, -36]
	LDR	R4, [R11, -40]
	MOV	R5, R4, LSL 16
	STR	R5, [R11, -40]
	LDR	R4, [R11, -48]
	LDR	R5, [R11, -40]
	ADD	R4, R4, R5
	STR	R4, [R11, -48]
	LDR	R4, [R11, -48]
	LDR	R5, [R11, -40]
	CMP	R4, R5
	MOVCS	R4, 0
	MOVCC	R4, 1
	LDR	R5, [R11, -36]
	ADD	R4, R4, R5
	STR	R4, [R11, -36]
	LDR	R4, [R11, -48]
	STR	R4, [R3, 0]
	LDR	R4, [R11, -36]
	STR	R4, [R2, 0]
L61
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}
END MUL32TO64;

PROCEDURE MUL64BY32TO96;
CODE	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R9, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R4, R0
	MOV	R5, R1
	MOV	R9, R2
	MOV	R6, R3
	LDR	R7, [R11, 4]
	LDR	R8, [R11, 8]
	SUB	R3, R11, 48
	SUB	R2, R11, 44
	MOV	R1, R9
	MOV	R0, R5
	BL	MUL32TO64
	SUB	R3, R11, 52
	SUB	R2, R11, 40
	MOV	R1, R9
	MOV	R0, R4
	BL	MUL32TO64
	SUB	R3, R11, 44
	STR	R3, [R13, -4]!
	SUB	R3, R11, 40
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -44]
	MOV	R2, 0
	LDR	R1, [R11, -52]
	LDR	R0, [R11, -40]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, -48]
	STR	R3, [R8, 0]
	LDR	R3, [R11, -44]
	STR	R3, [R7, 0]
	LDR	R3, [R11, -40]
	STR	R3, [R6, 0]
L64
	LDMEA	R11, {R4, R5, R6, R7, R8, R9, R11, R13, R15}
END MUL64BY32TO96;

PROCEDURE MUL64TO128;
CODE	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R9, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 32
	MOV	R8, R0
	MOV	R9, R1
	STR	R2, [R11, -64]
	STR	R3, [R11, -68]
	LDR	R4, [R11, 4]
	LDR	R5, [R11, 8]
	LDR	R6, [R11, 12]
	LDR	R7, [R11, 16]
	SUB	R3, R11, 52
	SUB	R2, R11, 48
	LDR	R1, [R11, -68]
	MOV	R0, R9
	BL	MUL32TO64
	SUB	R3, R11, 60
	SUB	R2, R11, 44
	LDR	R1, [R11, -64]
	MOV	R0, R9
	BL	MUL32TO64
	SUB	R3, R11, 48
	STR	R3, [R13, -4]!
	SUB	R3, R11, 44
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -48]
	MOV	R2, 0
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -44]
	BL	ADD64
	ADD	R13, R13, 8
	SUB	R3, R11, 56
	SUB	R2, R11, 40
	LDR	R1, [R11, -64]
	MOV	R0, R8
	BL	MUL32TO64
	SUB	R3, R11, 44
	STR	R3, [R13, -4]!
	SUB	R3, R11, 40
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -44]
	MOV	R2, 0
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -40]
	BL	ADD64
	ADD	R13, R13, 8
	SUB	R3, R11, 60
	SUB	R2, R11, 56
	LDR	R1, [R11, -68]
	MOV	R0, R8
	BL	MUL32TO64
	SUB	R3, R11, 48
	STR	R3, [R13, -4]!
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -48]
	MOV	R2, 0
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -56]
	BL	ADD64
	ADD	R13, R13, 8
	SUB	R3, R11, 44
	STR	R3, [R13, -4]!
	SUB	R3, R11, 40
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -56]
	MOV	R2, 0
	LDR	R1, [R11, -44]
	LDR	R0, [R11, -40]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, -52]
	STR	R3, [R7, 0]
	LDR	R3, [R11, -48]
	STR	R3, [R6, 0]
	LDR	R3, [R11, -44]
	STR	R3, [R5, 0]
	LDR	R3, [R11, -40]
	STR	R3, [R4, 0]
L65
	LDMEA	R11, {R4, R5, R6, R7, R8, R9, R11, R13, R15}

	
	
	
END MUL64TO128;

PROCEDURE PACKFLOAT32;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R12, R0
	MOV	R3, R1
	AND	R1, R12, 255
	MOV	R14, R1
	MOV	R4, R14, LSL 31
	MOV	R5, R3, LSL 23
	ADD	R4, R4, R5
	ADD	R5, R4, R2
	MOV	R0, R5
	B	L104
L104
	LDMEA	R11, {R4, R5, R11, R13, R15}
END PACKFLOAT32;

PROCEDURE SHIFTDOWN32JAMMING;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 4
	MOV	R12, R0
	MOV	R3, R2
	CMP	R1, 0
	BNE	L21
	STR	R12, [R11, -20]
	B	L22
L21
	CMP	R1, 31
	BGT	L23
	MOV	R2, R12, LSR R1
	RSB	R14, R1, 0
	AND	R4, R14, 31
	MOV	R14, R12, LSL R4
	CMP	R14, 0
	MOVEQ	R14, 0
	MOVNE	R14, 1
	ORR	R4, R2, R14
	STR	R4, [R11, -20]
	B	L24
L23
	CMP	R12, 0
	MOVEQ	R14, 0
	MOVNE	R14, 1
	STR	R14, [R11, -20]
L24
L22
	LDR	R14, [R11, -20]
	STR	R14, [R3, 0]
L20
	LDMEA	R11, {R4, R11, R13, R15}
END SHIFTDOWN32JAMMING;

PROCEDURE SHIFTDOWN64EXTRAJAMMING;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R4, R0
	MOV	R14, R1
	MOV	R12, R2
	MOV	R5, R3
	LDR	R3, [R11, 4]
	LDR	R2, [R11, 8]
	LDR	R1, [R11, 12]
	MOV	R6, R5
	RSB	R7, R6, 0
	MOV	R6, R7
	AND	R7, R6, 31
	MOV	R6, R7
	STRB	R6, [R11, -41]
	CMP	R5, 0
	BNE	L26
	STR	R12, [R11, -40]
	STR	R14, [R11, -36]
	STR	R4, [R11, -32]
	B	L27
L26
	CMP	R5, 31
	BGT	L28
	LDRB	R6, [R11, -41]
	MOV	R7, R6, LSL 24
	MOV	R6, R7, ASR 24
	MOV	R7, R14, LSL R6
	STR	R7, [R11, -40]
	LDRB	R6, [R11, -41]
	MOV	R7, R6, LSL 24
	MOV	R6, R7, ASR 24
	MOV	R7, R4, LSL R6
	MOV	R6, R14, LSR R5
	ORR	R7, R7, R6
	STR	R7, [R11, -36]
	MOV	R6, R4, LSR R5
	STR	R6, [R11, -32]
	B	L29
L28
	CMP	R5, 32
	BNE	L30
	STR	R14, [R11, -40]
	STR	R4, [R11, -36]
	B	L31
L30
	ORR	R12, R12, R14
	CMP	R5, 63
	BGT	L32
	LDRB	R6, [R11, -41]
	MOV	R7, R6, LSL 24
	MOV	R6, R7, ASR 24
	MOV	R7, R4, LSL R6
	STR	R7, [R11, -40]
	AND	R6, R5, 31
	MOV	R7, R4, LSR R6
	STR	R7, [R11, -36]
	B	L33
L32
	CMP	R5, 64
	BEQ	L34
	CMP	R4, 0
	MOVEQ	R6, 0
	MOVNE	R6, 1
	STR	R6, [R11, -40]
	B	L35
L34
	STR	R4, [R11, -40]
L35
	MOV	R6, 0
	STR	R6, [R11, -36]
L33
L31
	MOV	R6, 0
	STR	R6, [R11, -32]
L29
	CMP	R12, 0
	MOVEQ	R6, 0
	MOVNE	R6, 1
	LDR	R7, [R11, -40]
	ORR	R6, R7, R6
	STR	R6, [R11, -40]
L27
	LDR	R6, [R11, -40]
	STR	R6, [R1, 0]
	LDR	R6, [R11, -36]
	STR	R6, [R2, 0]
	LDR	R6, [R11, -32]
	STR	R6, [R3, 0]
L25
	LDMEA	R11, {R4, R5, R6, R7, R11, R13, R15}
END SHIFTDOWN64EXTRAJAMMING;

PROCEDURE SHIFTDOWN64JAMMING;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	MOV	R14, R0
	MOV	R12, R1
	MOV	R4, R2
	LDR	R2, [R11, 4]
	MOV	R6, R4
	RSB	R7, R6, 0
	MOV	R6, R7
	AND	R7, R6, 31
	MOV	R6, R7
	STRB	R6, [R11, -41]
	CMP	R4, 0
	BNE	L37
	STR	R12, [R11, -40]
	STR	R14, [R11, -36]
	B	L38
L37
	CMP	R4, 31
	BGT	L39
	LDRB	R6, [R11, -41]
	MOV	R7, R6, LSL 24
	MOV	R6, R7, ASR 24
	MOV	R1, R14, LSL R6
	MOV	R6, R12, LSR R4
	ORR	R1, R1, R6
	LDRB	R6, [R11, -41]
	MOV	R8, R6, LSL 24
	MOV	R7, R8, ASR 24
	MOV	R6, R12, LSL R7
	CMP	R6, 0
	MOVEQ	R6, 0
	MOVNE	R6, 1
	ORR	R6, R6, R1
	STR	R6, [R11, -40]
	MOV	R6, R14, LSR R4
	STR	R6, [R11, -36]
	B	L40
L39
	CMP	R4, 32
	BNE	L41
	CMP	R12, 0
	MOVEQ	R6, 0
	MOVNE	R6, 1
	ORR	R7, R14, R6
	STR	R7, [R11, -40]
	B	L42
L41
	CMP	R4, 63
	BGT	L43
	AND	R6, R4, 31
	MOV	R5, R14, LSR R6
	LDRB	R6, [R11, -41]
	MOV	R8, R6, LSL 24
	MOV	R7, R8, ASR 24
	MOV	R6, R14, LSL R7
	ORR	R6, R6, R12
	CMP	R6, 0
	MOVEQ	R6, 0
	MOVNE	R6, 1
	ORR	R6, R6, R5
	STR	R6, [R11, -40]
	B	L44
L43
	ORR	R6, R14, R12
	CMP	R6, 0
	MOVEQ	R6, 0
	MOVNE	R6, 1
	STR	R6, [R11, -40]
L44
L42
	MOV	R6, 0
	STR	R6, [R11, -36]
L40
L38
	LDR	R6, [R11, -40]
	STR	R6, [R2, 0]
	LDR	R6, [R11, -36]
	STR	R6, [R3, 0]
L36
	LDMEA	R11, {R4, R5, R6, R7, R8, R11, R13, R15}
END SHIFTDOWN64JAMMING;

PROCEDURE SHIFTDOWN64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	MOV	R12, R0
	MOV	R14, R2
	LDR	R2, [R11, 4]
	MOV	R4, R14
	RSB	R5, R4, 0
	MOV	R4, R5
	AND	R5, R4, 31
	MOV	R4, R5
	STRB	R4, [R11, -29]
	CMP	R14, 0
	BNE	L46
	STR	R1, [R11, -28]
	STR	R12, [R11, -24]
	B	L47
L46
	CMP	R14, 31
	BGT	L48
	LDRB	R4, [R11, -29]
	MOV	R5, R4, LSL 24
	MOV	R4, R5, ASR 24
	MOV	R5, R12, LSL R4
	MOV	R4, R1, LSR R14
	ORR	R5, R5, R4
	STR	R5, [R11, -28]
	MOV	R4, R12, LSR R14
	STR	R4, [R11, -24]
	B	L49
L48
	CMP	R14, 63
	BGT	L50
	AND	R4, R14, 31
	MOV	R5, R12, LSR R4
	STR	R5, [R11, -28]
	B	L51
L50
	MOV	R4, 0
	STR	R4, [R11, -28]
L51
	MOV	R4, 0
	STR	R4, [R11, -24]
L49
L47
	LDR	R4, [R11, -28]
	STR	R4, [R2, 0]
	LDR	R4, [R11, -24]
	STR	R4, [R3, 0]
L45
	LDMEA	R11, {R4, R5, R11, R13, R15}
END SHIFTDOWN64;

PROCEDURE SHORTSHIFTUP64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R12, R0
	MOV	R14, R2
	MOV	R2, R3
	LDR	R3, [R11, 4]
	MOV	R4, R1, LSL R14
	STR	R4, [R3, 0]
	CMP	R14, 0
	BEQ	L53
	MOV	R4, R12, LSL R14
	RSB	R5, R14, 0
	AND	R6, R5, 31
	MOV	R5, R1, LSR R6
	ORR	R4, R4, R5
	STR	R4, [R2, 0]
	B	L54
L53
	STR	R12, [R2, 0]
L54
L52
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}
END SHORTSHIFTUP64;

PROCEDURE SHORTSHIFTUP96;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R12, R0
	MOV	R14, R1
	MOV	R4, R2
	MOV	R5, R3
	LDR	R3, [R11, 4]
	LDR	R2, [R11, 8]
	LDR	R1, [R11, 12]
	MOV	R6, R4, LSL R5
	STR	R6, [R11, -40]
	MOV	R6, R14, LSL R5
	STR	R6, [R11, -36]
	MOV	R6, R12, LSL R5
	STR	R6, [R11, -32]
	CMP	R5, 0
	BLE	L56
	MOV	R6, R5
	RSB	R7, R6, 0
	MOV	R6, R7
	AND	R7, R6, 31
	MOV	R6, R7
	STRB	R6, [R11, -41]
	LDRB	R6, [R11, -41]
	MOV	R7, R6, LSL 24
	MOV	R6, R7, ASR 24
	MOV	R7, R4, LSR R6
	LDR	R6, [R11, -36]
	ORR	R7, R6, R7
	STR	R7, [R11, -36]
	LDRB	R6, [R11, -41]
	MOV	R7, R6, LSL 24
	MOV	R6, R7, ASR 24
	MOV	R7, R14, LSR R6
	LDR	R6, [R11, -32]
	ORR	R7, R6, R7
	STR	R7, [R11, -32]
L56
	LDR	R6, [R11, -40]
	STR	R6, [R1, 0]
	LDR	R6, [R11, -36]
	STR	R6, [R2, 0]
	LDR	R6, [R11, -32]
	STR	R6, [R3, 0]
L55
	LDMEA	R11, {R4, R5, R6, R7, R11, R13, R15}
END SHORTSHIFTUP96;

PROCEDURE EQ64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R12, R0
	MOV	R14, 0
	CMP	R12, R2
	BNE	L89
	CMP	R1, R3
	BNE	L89
	MOV	R14, 1
L89
	MOV	R0, R14
	B	L88
L88
	LDMEA	R11, {R11, R13, R15}
END EQ64;

PROCEDURE LE64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R12, R0
	MOV	R14, 0
	CMP	R12, R2
	BCC	L92
	CMP	R12, R2
	BNE	L91
	CMP	R1, R3
	BLS	L92
	B	L91
L92
	MOV	R14, 1
L91
	MOV	R0, R14
	B	L90
L90
	LDMEA	R11, {R11, R13, R15}
END LE64;

PROCEDURE LT64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R12, R0
	MOV	R14, 0
	CMP	R12, R2
	BCC	L95
	CMP	R12, R2
	BNE	L94
	CMP	R1, R3
	BCC	L95
	B	L94
L95
	MOV	R14, 1
L94
	MOV	R0, R14
	B	L93
L93
	LDMEA	R11, {R11, R13, R15}

	
	
	
END LT64;

PROCEDURE EXTRACTFLOAT32FRAC;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	BIC	R2, R3, 0FF000000H
	BIC	R2, R2, 8388608
	MOV	R0, R2
	B	L99
L99
	LDMEA	R11, {R11, R13, R15}

	
	
	
END EXTRACTFLOAT32FRAC;

PROCEDURE EXTRACTFLOAT32EXP;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R2, R3, LSR 23
	AND	R1, R2, 255
	MOV	R0, R1
	B	L100
L100
	LDMEA	R11, {R11, R13, R15}

	
	
	
END EXTRACTFLOAT32EXP;

PROCEDURE EXTRACTFLOAT32SIGN;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R2, R3, LSR 31
	AND	R1, R2, 255
	MOV	R0, R1
	B	L101
L101
	LDMEA	R11, {R11, R13, R15}

	
	
	
END EXTRACTFLOAT32SIGN;

PROCEDURE BOTHZEROFLOAT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R2, R1
	ORR	R1, R3, R2
	MOV	R12, R1, LSL 1
	CMP	R12, 0
	MOVNE	R1, 0
	MOVEQ	R1, 1
	MOV	R0, R1
	B	L102
L102
	LDMEA	R11, {R11, R13, R15}

	
	
	
END BOTHZEROFLOAT32;


PROCEDURE EXTRACTFLOAT64FRAC1;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R4, R1
	MOV	R0, R4
	B	L126
L126
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
END EXTRACTFLOAT64FRAC1;

PROCEDURE EXTRACTFLOAT64FRAC0;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R4, R1
	BIC	R2, R3, 0FF000000H
	BIC	R2, R2, 15728640
	MOV	R0, R2
	B	L127
L127
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
END EXTRACTFLOAT64FRAC0;

PROCEDURE EXTRACTFLOAT64EXP;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R4, R1
	MOV	R1, R3, LSR 20
	MOV	R2, R1, LSL 21
	MOV	R2, R2, LSR 21
	MOV	R0, R2
	B	L128
L128
	LDMEA	R11, {R4, R11, R13, R15}
END EXTRACTFLOAT64EXP;

PROCEDURE EXTRACTFLOAT64SIGN;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R3, R0
	MOV	R4, R1
	MOV	R2, R3, LSR 31
	AND	R1, R2, 255
	MOV	R0, R1
	B	L129
L129
	LDMEA	R11, {R4, R11, R13, R15}
END EXTRACTFLOAT64SIGN;

PROCEDURE BOTHZEROFLOAT64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	MOV	R4, R0
	MOV	R5, R1
	ORR	R1, R4, R2
	MOV	R12, R1, LSL 1
	ORR	R1, R12, R5
	ORR	R12, R1, R3
	CMP	R12, 0
	MOVNE	R1, 0
	MOVEQ	R1, 1
	MOV	R0, R1
	B	L130
L130
	LDMEA	R11, {R4, R5, R11, R13, R15}
END BOTHZEROFLOAT64;

PROCEDURE PACKFLOAT64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R9, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	MOV	R12, R0
	MOV	R14, R1
	LDR	R1, [R11, 4]
	AND	R4, R14, 255
	MOV	R5, R4
	STR	R1, [R11, -40]
	MOV	R6, R5, LSL 31
	MOV	R7, R2, LSL 20
	ADD	R6, R6, R7
	ADD	R7, R6, R3
	STR	R7, [R11, -44]
	LDR	R8, [R11, -44]
	LDR	R9, [R11, -40]
	STMIA	R12, {R8,R9}
	B	L136
L136
	MOV	R0, R12
	LDMEA	R11, {R4, R5, R6, R7, R8, R9, R11, R13, R15}

	
END PACKFLOAT64;



PROCEDURE FLOATRAISE;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 4
	MOV	R3, R0
	MOV	R2, R3
	STRB	R2, [R11, -13]
	(* LDR	R1, L3 *) ADDR R1, ExceptionFlags
	(* LDR	R12, L3 *) MOV R12, R1
	LDRB	R14, [R12, 0]
	LDRB	R12, [R11, -13]
	ORR	R14, R14, R12
	MOV	R12, R14
	STRB	R12, [R1, 0]
	B	L2
L4
	
(*
L3
	.WORD	FLOATEXCEPTIONFLAGS
*)
L2
L1
	(* INSERTED BY HAND! *)
	ADDR R1, ExceptionFlags
	LDRB	R1,[R1,0]
	TST	R1,1
(*	SWINE	0FFFFFFFCH	(* -4 *)*)
	MVN	R7, 4
	BLNE	Halt

	TST	R1,2
(*	SWINE	0FFFFFFFBH	(* -5 *)*)
	MVN	R7, 5
	BLNE	Halt

	ADDR	R2,OverflowExceptions
	LDRB	R2,[R2,0]
	CMP	R2,0
	BEQ	done
	TST	R1,4
(*	SWINE	0FFFFFFFAH	(* -6 *)*)
	MVN	R7, 6
	BLNE	Halt

	TST	R1,8
(*	SWINE	0FFFFFFF9H	(* -7 *)*)
	MVN	R7, 7
	BLNE	Halt

done
	LDMEA	R11, {R11, R13, R15}
END FLOATRAISE;

PROCEDURE FLOAT32ISSIGNALINGNAN;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 4
	STR	R0, [R11, -16]
	MOV	R3, 0
	LDR	R1, [R11, -16]
	BIC	R2, R1, 080000000H
	MOV	R2, R2, LSR 22
	MOV	R2, R2, LSL 22
	MOV	R1, 2130706432
	ADD	R1, R1, 8388608
	CMP	R2, R1
	BNE	L6
	LDR	R1, [R11, -16]
	BIC	R2, R1, 0FF000000H
	BIC	R2, R2, 12582912
	CMP	R2, 0
	BEQ	L6
	MOV	R3, 1
L6
	MOV	R0, R3
	B	L5
L5
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32ISSIGNALINGNAN;

PROCEDURE FLOAT64ISSIGNALINGNAN;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -20]
	STR	R1, [R11, -16]
	MOV	R3, 0
	LDR	R1, [R11, -20]
	BIC	R2, R1, 080000000H
	MOV	R2, R2, LSR 19
	MOV	R2, R2, LSL 19
	MOV	R1, 2130706432
	ADD	R1, R1, 15728640
	CMP	R2, R1
	BNE	L8
	LDR	R1, [R11, -20]
	BIC	R2, R1, 0FF000000H
	BIC	R2, R2, 16252928
	CMP	R2, 0
	BNE	L9
	LDR	R2, [R11, -16]
	CMP	R2, 0
	BNE	L9
	B	L8
L9
	MOV	R3, 1
L8
	MOV	R0, R3
	B	L7
L7
	LDMEA	R11, {R11, R13, R15}

	
	
	
END FLOAT64ISSIGNALINGNAN;

PROCEDURE FLOAT32TOFLOAT64NAN;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	MOV	R4, R0
	STR	R1, [R11, -28]
	LDR	R0, [R11, -28]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BEQ	L11
	MOV	R0, 1
	BL	FLOATRAISE
L11
	MOV	R3, 0
	STR	R3, [R11, -32]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -36]
	LDR	R5, [R11, -36]
	LDR	R6, [R11, -32]
	STMIA	R4, {R5,R6}
	B	L10
L10
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
END FLOAT32TOFLOAT64NAN;

PROCEDURE FLOAT64TOFLOAT32NAN;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -20]
	STR	R1, [R11, -16]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BEQ	L13
	MOV	R0, 1
	BL	FLOATRAISE
L13
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L12
L12
	LDMEA	R11, {R11, R13, R15}

	
	
	
END FLOAT64TOFLOAT32NAN;

PROCEDURE PROPAGATEFLOAT32NAN;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L16
	LDR	R0, [R11, -20]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L16
	B	L15
L16
	MOV	R0, 1
	BL	FLOATRAISE
L15
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L14
L14
	LDMEA	R11, {R11, R13, R15}

	
	
	
END PROPAGATEFLOAT32NAN;

PROCEDURE PROPAGATEFLOAT64NAN;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 16
	MOV	R4, R0
	STR	R1, [R11, -32]
	STR	R2, [R11, -28]
	STR	R3, [R11, 4]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L19
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L19
	B	L18
L19
	MOV	R0, 1
	BL	FLOATRAISE
L18
	MOV	R3, 0
	STR	R3, [R11, -36]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -40]
	LDR	R5, [R11, -40]
	LDR	R6, [R11, -36]
	STMIA	R4, {R5,R6}
	B	L17
L17
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
END PROPAGATEFLOAT64NAN;

PROCEDURE ESTIMATEDIV64TO32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	STR	R2, [R11, -24]
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -16]
	CMP	R3, R2
	BHI	L67
	MVN	R0, 0
	B	L66
L67
	LDR	R3, [R11, -24]
	MOV	R2, R3, LSR 16
	STR	R2, [R11, -48]
	LDR	R2, [R11, -48]
	MOV	R3, R2, LSL 16
	LDR	R2, [R11, -16]
	CMP	R3, R2
	BLS	L68
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -16]
	BL	UDIVSI3
	MOV	R2, R0
	MOV	R3, R2, LSL 16
	B	L69
L68
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 15
L69
	STR	R3, [R11, -28]
	SUB	R3, R11, 44
	SUB	R2, R11, 40
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	MUL32TO64
	SUB	R3, R11, 36
	STR	R3, [R13, -4]!
	SUB	R3, R11, 32
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -44]
	LDR	R2, [R11, -40]
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	SUB64
	ADD	R13, R13, 8
L70
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BLT	L72
	B	L71
L72
	LDR	R3, [R11, -28]
	SUB	R2, R3, 65536
	STR	R2, [R11, -28]
	LDR	R3, [R11, -24]
	MOV	R2, R3, LSL 16
	STR	R2, [R11, -52]
	SUB	R3, R11, 36
	STR	R3, [R13, -4]!
	SUB	R3, R11, 32
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -48]
	LDR	R1, [R11, -36]
	LDR	R0, [R11, -32]
	BL	ADD64
	ADD	R13, R13, 8
	B	L70
L71
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSL 16
	LDR	R1, [R11, -36]
	MOV	R2, R1, LSR 16
	ORR	R3, R3, R2
	STR	R3, [R11, -32]
	LDR	R2, [R11, -48]
	MOV	R3, R2, LSL 16
	LDR	R2, [R11, -32]
	CMP	R3, R2
	BLS	L73
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -32]
	BL	UDIVSI3
	MOV	R3, R0
	LDR	R2, [R11, -28]
	ORR	R3, R3, R2
	B	L74
L73
	LDR	R2, [R11, -28]
	MVN	R3, R2, LSR 16
	MVN	R3, R3, LSL 16
L74
	STR	R3, [R11, -28]
	LDR	R0, [R11, -28]
	B	L66
L66
	LDMEA	R11, {R11, R13, R15}

	
	
	
END ESTIMATEDIV64TO32;

PROCEDURE SQRTODDADJUSTMENTS44;
CODE
	DCW	4, 34, 93, 177, 285, 415, 566, 736, 924, 1128, 1349, 1585, 1835, 2098, 2374, 2663
	
END SQRTODDADJUSTMENTS44;

PROCEDURE SQRTEVENADJUSTMENTS45;
CODE
	DCW	2605, 2223, 1882, 1577, 1306, 1065, 854, 670, 512, 377, 265, 175, 104, 52, 18, 2
	
END SQRTEVENADJUSTMENTS45;

PROCEDURE ESTIMATESQRT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R2, [R11, -20]
	MOV	R3, R2, LSR 27
	MOV	R2, R3
	AND	R3, R2, 15
	MOV	R2, R3
	STRB	R2, [R11, -21]
	LDR	R2, [R11, -16]
	AND	R3, R2, 1
	CMP	R3, 0
	BEQ	L76
	LDR	R2, [R11, -20]
	MOV	R3, R2, LSR 17
	LDRB	R2, [R11, -21]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	MOV	R1, R2
	MOV	R2, R1, LSL 1
	(* LDR	R1, L81 *) ADDR R1, SQRTODDADJUSTMENTS44
	ADD	R2, R2, R1
	LDRH	R1, [R2, 0]	
	MOV	R12, R1, LSL 16
	MOV	R2, R12, LSR 16
	SUB	R1, R2, 16384
	RSB	R3, R1, R3
	STR	R3, [R11, -28]
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -20]
	BL	UDIVSI3
	MOV	R2, R0
	MOV	R3, R2, LSL 14
	LDR	R1, [R11, -28]
	MOV	R2, R1, LSL 15
	ADD	R3, R3, R2
	STR	R3, [R11, -28]
	LDR	R3, [R11, -20]
	MOV	R2, R3, LSR 1
	STR	R2, [R11, -20]
	B	L77
L76
	LDR	R2, [R11, -20]
	MOV	R3, R2, LSR 17
	LDRB	R2, [R11, -21]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	MOV	R1, R2
	MOV	R2, R1, LSL 1
	(* LDR	R1, L81+4 *) ADDR R1,SQRTEVENADJUSTMENTS45
	ADD	R2, R2, R1
	LDRH	R1, [R2, 0]	
	MOV	R12, R1, LSL 16
	MOV	R2, R12, LSR 16
	SUB	R1, R2, 32768
	RSB	R3, R1, R3
	STR	R3, [R11, -28]
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -20]
	BL	UDIVSI3
	MOV	R3, R0
	LDR	R2, [R11, -28]
	ADD	R3, R2, R3
	STR	R3, [R11, -28]
	LDR	R3, [R11, -28]
	MVN	R2, 0FF000000H
	SUB	R2, R2, 16646144
	CMP	R3, R2
	BHI	L78
	LDR	R2, [R11, -28]
	MOV	R3, R2, LSL 15
	B	L79
L78
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 16
L79
	STR	R3, [R11, -28]
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -20]
	CMP	R3, R2
	BHI	L80
	LDR	R2, [R11, -20]
	MOV	R3, R2, ASR 1
	MOV	R0, R3
	B	L75
L80
L77
	LDR	R2, [R11, -28]
	MOV	R1, 0
	LDR	R0, [R11, -20]
	BL	ESTIMATEDIV64TO32
	MOV	R2, R0
	MOV	R3, R2, LSR 1
	LDR	R1, [R11, -28]
	MOV	R2, R1, LSR 1
	ADD	R3, R3, R2
	MOV	R0, R3
	B	L75
L82
	
(*
L81
	.WORD	SQRTODDADJUSTMENTS.44
	.WORD	SQRTEVENADJUSTMENTS.45
*)
L75
	LDMEA	R11, {R11, R13, R15}

	
	
END ESTIMATESQRT32;

PROCEDURE COUNTLEADINGZEROSHIGH48;
CODE
	DCB	8X, 7X, 6X, 6X, 5X, 5X, 5X, 5X, 4X, 4X, 4X, 4X, 4X, 4X, 4X, 4X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 3X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 2X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 1X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X, 0X
	
END COUNTLEADINGZEROSHIGH48;

PROCEDURE COUNTLEADINGZEROS;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -16]
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -17]
	LDR	R3, [R11, -16]
	MOV	R2, 65280
	ADD	R2, R2, 255
	CMP	R3, R2
	BHI	L84
	LDRB	R3, [R11, -17]
	ADD	R2, R3, 16
	MOV	R3, R2
	STRB	R3, [R11, -17]
	LDR	R3, [R11, -16]
	MOV	R2, R3, LSL 16
	STR	R2, [R11, -16]
L84
	LDR	R3, [R11, -16]
	MVN	R2, 0FF000000H
	CMP	R3, R2
	BHI	L85
	LDRB	R3, [R11, -17]
	ADD	R2, R3, 8
	MOV	R3, R2
	STRB	R3, [R11, -17]
	LDR	R3, [R11, -16]
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -16]
L85
	LDR	R2, [R11, -16]
	MOV	R3, R2, LSR 24
	(* LDR	R2, L86 *) ADDR R2, COUNTLEADINGZEROSHIGH48
	ADD	R3, R3, R2
	LDRB	R2, [R11, -17]
	LDRB	R3, [R3, 0]
	ADD	R2, R2, R3
	MOV	R3, R2
	STRB	R3, [R11, -17]
	LDRB	R3, [R11, -17]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	MOV	R0, R3
	B	L83
L87
	
(*
L86
	.WORD	COUNTLEADINGZEROSHIGH.48
*)
L83
	LDMEA	R11, {R11, R13, R15}

	
	
	
END COUNTLEADINGZEROS;

PROCEDURE NORMALIZEFLOAT32SUBNORMAL;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	STR	R2, [R11, -24]
	LDR	R0, [R11, -16]
	BL	COUNTLEADINGZEROS
	MOV	R3, R0
	SUB	R2, R3, 8
	MOV	R3, R2
	STRB	R3, [R11, -25]
	LDR	R3, [R11, -24]
	LDRB	R2, [R11, -25]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	LDR	R1, [R11, -16]
	MOV	R2, R1, LSL R2
	STR	R2, [R3, 0]
	LDR	R3, [R11, -20]
	LDRB	R2, [R11, -25]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	RSB	R1, R2, 1
	STR	R1, [R3, 0]
L103
	LDMEA	R11, {R11, R13, R15}

	
	
	
END NORMALIZEFLOAT32SUBNORMAL;

PROCEDURE ROUNDANDPACKFLOAT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 20
	MOV	R4, R0
	STR	R1, [R11, -32]
	STR	R2, [R11, -36]
	MOV	R5, R4
	STRB	R5, [R11, -25]
	(* LDR	R3, L123 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -37]
	LDRB	R3, [R11, -37]	
	CMP	R3, 0
	MOVNE	R3, 0
	MOVEQ	R3, 1
	MOV	R2, R3
	STRB	R2, [R11, -38]
	MOV	R3, 64
	MOV	R2, R3
	STRB	R2, [R11, -39]
	LDRB	R3, [R11, -38]	
	CMP	R3, 0
	BNE	L106
	LDRB	R3, [R11, -37]	
	CMP	R3, 3
	BNE	L107
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -39]
	B	L108
L107
	MOV	R3, 127
	MOV	R2, R3
	STRB	R2, [R11, -39]
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L109
	LDRB	R3, [R11, -37]	
	CMP	R3, 1
	BNE	L110
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -39]
L110
	B	L111
L109
	LDRB	R3, [R11, -37]	
	CMP	R3, 2
	BNE	L112
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -39]
L112
L111
L108
L106
	LDRB	R3, [R11, -36]
	AND	R2, R3, 127
	MOV	R3, R2
	STRB	R3, [R11, -40]
	LDRH	R3, [R11, -32]	
	MOV	R2, R3, LSL 16
	MOV	R3, R2, LSR 16
	CMP	R3, 252
	BLS	L113
	LDR	R3, [R11, -32]
	CMP	R3, 253
	BGT	L115
	LDR	R3, [R11, -32]
	CMP	R3, 253
	BNE	L114
	LDRB	R3, [R11, -39]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	LDR	R2, [R11, -36]
	ADD	R3, R3, R2
	CMP	R3, 0
	BLT	L115
	B	L114
L115
	MOV	R0, 20
	BL	FLOATRAISE
	LDRB	R3, [R11, -25]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R6, R0
	LDRB	R3, [R11, -39]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	CMP	R3, 0
	MOVNE	R3, 0
	MOVEQ	R3, 1
	RSB	R3, R3, R6
	MOV	R0, R3
	B	L105
L114
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BGE	L116
	MOV	R2, 0
	MOV	R3, R2
	(* LDR	R2, L123+4 *) ADDR R2, DetectTininess
	LDRB	R1, [R2, 0]	
	CMP	R1, 0
	BEQ	L118
	LDR	R2, [R11, -32]
	CMN	R2, 1
	BLT	L118
	LDRB	R2, [R11, -39]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	LDR	R1, [R11, -36]
	ADD	R2, R2, R1
	CMN	R2, 080000001H
	BLS	L118
	B	L117
L118
	MOV	R2, 1
	MOV	R3, R2
L117
	STRB	R3, [R11, -41]
	SUB	R3, R11, 36
	LDR	R2, [R11, -32]
	RSB	R1, R2, 0
	MOV	R2, R3
	LDR	R0, [R11, -36]
	BL	SHIFTDOWN32JAMMING
	MOV	R3, 0
	STR	R3, [R11, -32]
	LDRB	R3, [R11, -36]
	AND	R2, R3, 127
	MOV	R3, R2
	STRB	R3, [R11, -40]
	LDRB	R3, [R11, -41]	
	CMP	R3, 0
	BEQ	L119
	LDRB	R3, [R11, -40]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	CMP	R3, 0
	BEQ	L119
	MOV	R0, 8
	BL	FLOATRAISE
L119
L116
L113
	LDRB	R3, [R11, -40]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	CMP	R3, 0
	BEQ	L120
	(* LDR	R3, L123+8 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L123+8 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L120
	LDRB	R3, [R11, -39]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	LDR	R2, [R11, -36]
	ADD	R3, R3, R2
	MOV	R2, R3, LSR 7
	STR	R2, [R11, -36]
	LDR	R3, [R11, -36]
	LDRB	R2, [R11, -40]
	EOR	R1, R2, 64
	MOV	R12, R1, LSL 24
	MOV	R2, R12, ASR 24
	CMP	R2, 0
	BNE	L121
	LDRB	R2, [R11, -38]	
	AND	R1, R2, 1
	MVN	R2, R1
	AND	R3, R3, R2
L121
	STR	R3, [R11, -36]
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BNE	L122
	MOV	R3, 0
	STR	R3, [R11, -32]
L122
	LDRB	R3, [R11, -25]	
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -32]
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L105
L124
	
(*
L123
	.WORD	FLOATROUNDINGMODE
	.WORD	FLOATDETECTTININESS
	.WORD	FLOATEXCEPTIONFLAGS
*)
L105
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}
END ROUNDANDPACKFLOAT32;

PROCEDURE NORMALIZEROUNDANDPACKFLOAT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R4, R0
	STR	R1, [R11, -28]
	STR	R2, [R11, -32]
	MOV	R5, R4
	STRB	R5, [R11, -21]
	LDR	R0, [R11, -32]
	BL	COUNTLEADINGZEROS
	MOV	R3, R0
	SUB	R2, R3, 1
	MOV	R3, R2
	STRB	R3, [R11, -33]
	LDRB	R3, [R11, -33]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSL R3
	LDRB	R2, [R11, -33]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	LDR	R12, [R11, -28]
	RSB	R1, R2, R12
	LDRB	R12, [R11, -21]	
	MOV	R2, R3
	MOV	R0, R12
	BL	ROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L125
L125
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
END NORMALIZEROUNDANDPACKFLOAT32;

PROCEDURE NORMALIZEFLOAT64SUBNORMAL;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 20
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	STR	R2, [R11, -24]
	STR	R3, [R11, -28]
	LDR	R3, [R11, -16]
	CMP	R3, 0
	BNE	L132
	LDR	R0, [R11, -20]
	BL	COUNTLEADINGZEROS
	MOV	R3, R0
	SUB	R2, R3, 11
	MOV	R3, R2
	STRB	R3, [R11, -29]
	LDRB	R3, [R11, -29]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	CMP	R3, 0
	BGE	L133
	LDR	R3, [R11, -28]
	LDRB	R2, [R11, -29]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	RSB	R1, R2, 0
	LDR	R2, [R11, -20]
	MOV	R1, R2, LSR R1
	STR	R1, [R3, 0]
	LDR	R3, [R11, 4]
	LDRB	R2, [R11, -29]
	AND	R1, R2, 31
	MOV	R12, R1, LSL 24
	MOV	R2, R12, ASR 24
	LDR	R1, [R11, -20]
	MOV	R2, R1, LSL R2
	STR	R2, [R3, 0]
	B	L134
L133
	LDR	R3, [R11, -28]
	LDRB	R2, [R11, -29]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	LDR	R1, [R11, -20]
	MOV	R2, R1, LSL R2
	STR	R2, [R3, 0]
	LDR	R3, [R11, 4]
	MOV	R2, 0
	STR	R2, [R3, 0]
L134
	LDR	R3, [R11, -24]
	LDRB	R2, [R11, -29]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	RSB	R1, R2, 0
	SUB	R2, R1, 31
	STR	R2, [R3, 0]
	B	L135
L132
	LDR	R0, [R11, -16]
	BL	COUNTLEADINGZEROS
	MOV	R3, R0
	SUB	R2, R3, 11
	MOV	R3, R2
	STRB	R3, [R11, -29]
	LDRB	R3, [R11, -29]
	MOV	R1, R3, LSL 24
	MOV	R2, R1, ASR 24
	LDR	R3, [R11, 4]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -28]
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -24]
	LDRB	R2, [R11, -29]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	RSB	R1, R2, 1
	STR	R1, [R3, 0]
L135
L131
	LDMEA	R11, {R11, R13, R15}

	
	
	
END NORMALIZEFLOAT64SUBNORMAL;

PROCEDURE ROUNDANDPACKFLOAT64;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	MOV	R4, R0
	MOV	R5, R1
	STR	R2, [R11, -36]
	STR	R3, [R11, -40]
	MOV	R6, R5
	STRB	R6, [R11, -29]
	(* LDR	R3, L165 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -41]
	LDRB	R3, [R11, -41]	
	CMP	R3, 0
	MOVNE	R3, 0
	MOVEQ	R3, 1
	MOV	R2, R3
	STRB	R2, [R11, -42]
	LDR	R2, [R11, 8]
	MOV	R3, R2, LSR 31
	MOV	R2, R3
	STRB	R2, [R11, -43]
	LDRB	R3, [R11, -42]	
	CMP	R3, 0
	BNE	L138
	LDRB	R3, [R11, -41]	
	CMP	R3, 3
	BNE	L139
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -43]
	B	L140
L139
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BEQ	L141
	MOV	R2, 0
	MOV	R3, R2
	LDRB	R2, [R11, -41]	
	CMP	R2, 2
	BNE	L142
	LDR	R2, [R11, 8]
	CMP	R2, 0
	BEQ	L142
	MOV	R2, 1
	MOV	R3, R2
L142
	STRB	R3, [R11, -43]
	B	L143
L141
	MOV	R2, 0
	MOV	R3, R2
	LDRB	R2, [R11, -41]	
	CMP	R2, 1
	BNE	L144
	LDR	R2, [R11, 8]
	CMP	R2, 0
	BEQ	L144
	MOV	R2, 1
	MOV	R3, R2
L144
	STRB	R3, [R11, -43]
L143
L140
L138
	LDRH	R3, [R11, -36]	
	MOV	R2, R3, LSL 16
	MOV	R3, R2, LSR 16
	MOV	R2, 2032
	ADD	R2, R2, 12
	CMP	R3, R2
	BLS	L145
	LDR	R3, [R11, -36]
	MOV	R2, 2032
	ADD	R2, R2, 13
	CMP	R3, R2
	BGT	L147
	LDR	R3, [R11, -36]
	MOV	R2, 2032
	ADD	R2, R2, 13
	CMP	R3, R2
	BNE	L146
	LDR	R3, [R11, 4]
	LDR	R2, [R11, -40]
	MVN	R1, 0
	MVN	R0, 0FF000000H
	SUB	R0, R0, 14680064
	BL	EQ64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BEQ	L146
	LDRB	R3, [R11, -43]	
	CMP	R3, 0
	BNE	L147
	B	L146
L147
	MOV	R0, 20
	BL	FLOATRAISE
	LDRB	R3, [R11, -41]	
	CMP	R3, 3
	BEQ	L149
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BEQ	L150
	LDRB	R3, [R11, -41]	
	CMP	R3, 1
	BEQ	L149
	B	L150
L150
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BNE	L148
	LDRB	R3, [R11, -41]	
	CMP	R3, 2
	BEQ	L149
	B	L148
L149
	LDRB	R1, [R11, -29]	
	MVN	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MVN	R3, 0FF000000H
	SUB	R3, R3, 15728640
	MOV	R2, 2032
	ADD	R2, R2, 14
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L137
L148
	LDRB	R1, [R11, -29]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L137
L146
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BGE	L151
	MOV	R3, 0
	MOV	R7, R3
	(* LDR	R3, L165+4 *) ADDR R3, DetectTininess
	LDRB	R2, [R3, 0]	
	CMP	R2, 0
	BEQ	L153
	LDR	R3, [R11, -36]
	CMN	R3, 1
	BLT	L153
	LDRB	R3, [R11, -43]	
	CMP	R3, 0
	BEQ	L153
	MVN	R3, 0
	MVN	R2, 0FF000000H
	SUB	R2, R2, 14680064
	LDR	R1, [R11, 4]
	LDR	R0, [R11, -40]
	BL	LT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L153
	B	L152
L153
	MOV	R3, 1
	MOV	R7, R3
L152
	STRB	R7, [R11, -44]
	LDR	R2, [R11, -36]
	RSB	R3, R2, 0
	ADD	R2, R11, 8
	STR	R2, [R13, -4]!
	ADD	R2, R11, 4
	STR	R2, [R13, -4]!
	SUB	R2, R11, 40
	STR	R2, [R13, -4]!
	LDR	R2, [R11, 8]
	LDR	R1, [R11, 4]
	LDR	R0, [R11, -40]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
	MOV	R3, 0
	STR	R3, [R11, -36]
	LDRB	R3, [R11, -44]	
	CMP	R3, 0
	BEQ	L154
	LDR	R3, [R11, 8]
	CMP	R3, 0
	BEQ	L154
	MOV	R0, 8
	BL	FLOATRAISE
L154
	LDRB	R3, [R11, -42]	
	CMP	R3, 0
	BEQ	L155
	LDR	R2, [R11, 8]
	MOV	R3, R2, LSR 31
	MOV	R2, R3
	STRB	R2, [R11, -43]
	B	L156
L155
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BEQ	L157
	MOV	R2, 0
	MOV	R3, R2
	LDRB	R2, [R11, -41]	
	CMP	R2, 2
	BNE	L158
	LDR	R2, [R11, 8]
	CMP	R2, 0
	BEQ	L158
	MOV	R2, 1
	MOV	R3, R2
L158
	STRB	R3, [R11, -43]
	B	L159
L166
	
(*
L165
	.WORD	FLOATROUNDINGMODE
	.WORD	FLOATDETECTTININESS
*)
L157
	MOV	R2, 0
	MOV	R3, R2
	LDRB	R2, [R11, -41]	
	CMP	R2, 1
	BNE	L160
	LDR	R2, [R11, 8]
	CMP	R2, 0
	BEQ	L160
	MOV	R2, 1
	MOV	R3, R2
L160
	STRB	R3, [R11, -43]
L159
L156
L151
L145
	LDR	R3, [R11, 8]
	CMP	R3, 0
	BEQ	L161
	(* LDR	R3, L167 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L167 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L161
	LDRB	R3, [R11, -43]	
	CMP	R3, 0
	BEQ	L162
	ADD	R3, R11, 4
	STR	R3, [R13, -4]!
	SUB	R3, R11, 40
	STR	R3, [R13, -4]!
	MOV	R3, 1
	MOV	R2, 0
	LDR	R1, [R11, 4]
	LDR	R0, [R11, -40]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, 4]
	LDR	R2, [R11, 8]
	LDR	R1, [R11, 8]
	ADD	R2, R2, R1
	CMP	R2, 0
	BNE	L163
	LDRB	R2, [R11, -42]	
	AND	R1, R2, 1
	MVN	R2, R1
	AND	R3, R3, R2
L163
	STR	R3, [R11, 4]
L162
	LDR	R3, [R11, -40]
	LDR	R2, [R11, 4]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L164
	MOV	R3, 0
	STR	R3, [R11, -36]
L164
	LDRB	R1, [R11, -29]	
	LDR	R3, [R11, 4]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L137
L168
	
(*
L167
	.WORD	FLOATEXCEPTIONFLAGS
*)
L137
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R7, R11, R13, R15}
END ROUNDANDPACKFLOAT64;

PROCEDURE NORMALIZEROUNDANDPACKFLOAT64;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 20
	MOV	R4, R0
	MOV	R5, R1
	STR	R2, [R11, -32]
	STR	R3, [R11, -36]
	MOV	R6, R5
	STRB	R6, [R11, -25]
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BNE	L170
	LDR	R3, [R11, 4]
	STR	R3, [R11, -36]
	MOV	R3, 0
	STR	R3, [R11, 4]
	LDR	R3, [R11, -32]
	SUB	R2, R3, 32
	STR	R2, [R11, -32]
L170
	LDR	R0, [R11, -36]
	BL	COUNTLEADINGZEROS
	MOV	R3, R0
	SUB	R2, R3, 11
	MOV	R3, R2
	STRB	R3, [R11, -37]
	LDRB	R3, [R11, -37]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	CMP	R3, 0
	BLT	L171
	MOV	R3, 0
	STR	R3, [R11, -44]
	SUB	R3, R11, 36
	LDRB	R2, [R11, -37]
	MOV	R1, R2, LSL 24
	MOV	R2, R1, ASR 24
	ADD	R1, R11, 4
	STR	R1, [R13, -4]!
	LDR	R1, [R11, 4]
	LDR	R0, [R11, -36]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	B	L172
L171
	LDRB	R3, [R11, -37]
	MOV	R1, R3, LSL 24
	MOV	R2, R1, ASR 24
	RSB	R3, R2, 0
	SUB	R2, R11, 44
	STR	R2, [R13, -4]!
	ADD	R2, R11, 4
	STR	R2, [R13, -4]!
	SUB	R2, R11, 36
	STR	R2, [R13, -4]!
	MOV	R2, 0
	LDR	R1, [R11, 4]
	LDR	R0, [R11, -36]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
L172
	LDRB	R3, [R11, -37]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	LDR	R2, [R11, -32]
	RSB	R3, R3, R2
	STR	R3, [R11, -32]
	LDRB	R1, [R11, -25]	
	LDR	R3, [R11, -44]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -36]
	LDR	R2, [R11, -32]
	BL	ROUNDANDPACKFLOAT64
	ADD	R13, R13, 8
	B	L169
L169
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
	
END NORMALIZEROUNDANDPACKFLOAT64;

PROCEDURE INT32TOFLOAT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -16]
	LDR	R3, [R11, -16]
	CMP	R3, 0
	BNE	L174
	MOV	R0, 0
	B	L173
L174
	LDR	R3, [R11, -16]
	CMP	R3, 080000000H
	BNE	L175
	MOV	R2, 0
	MOV	R1, 158
	MOV	R0, 1
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L173
L175
	LDR	R2, [R11, -16]
	MOV	R3, R2, LSR 31
	MOV	R2, R3
	STRB	R2, [R11, -17]
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L176
	LDR	R2, [R11, -16]
	RSB	R3, R2, 0
	B	L177
L176
	LDR	R3, [R11, -16]
L177
	LDRB	R12, [R11, -17]	
	MOV	R2, R3
	MOV	R1, 156
	MOV	R0, R12
	BL	NORMALIZEROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L173
L173
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END INT32TOFLOAT32;

PROCEDURE INT32TOFLOAT64;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 24
	MOV	R4, R0
	STR	R1, [R11, -20]
	LDR	R3, [R11, -20]
	CMP	R3, 0
	BNE	L179
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	MOV	R1, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L178
L179
	LDR	R2, [R11, -20]
	MOV	R3, R2, LSR 31
	MOV	R2, R3
	STRB	R2, [R11, -21]
	LDRB	R3, [R11, -21]	
	CMP	R3, 0
	BEQ	L180
	LDR	R2, [R11, -20]
	RSB	R3, R2, 0
	B	L181
L180
	LDR	R3, [R11, -20]
L181
	STR	R3, [R11, -28]
	LDR	R0, [R11, -28]
	BL	COUNTLEADINGZEROS
	MOV	R3, R0
	SUB	R2, R3, 11
	MOV	R3, R2
	STRB	R3, [R11, -29]
	LDRB	R3, [R11, -29]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	CMP	R3, 0
	BLT	L182
	LDRB	R3, [R11, -29]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	LDR	R2, [R11, -28]
	MOV	R3, R2, LSL R3
	STR	R3, [R11, -36]
	MOV	R3, 0
	STR	R3, [R11, -40]
	B	L183
L182
	SUB	R3, R11, 36
	LDRB	R2, [R11, -29]
	MOV	R12, R2, LSL 24
	MOV	R1, R12, ASR 24
	RSB	R2, R1, 0
	SUB	R1, R11, 40
	STR	R1, [R13, -4]!
	MOV	R1, 0
	LDR	R0, [R11, -28]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
L183
	LDRB	R3, [R11, -29]
	MOV	R2, R3, LSL 24
	MOV	R3, R2, ASR 24
	RSB	R2, R3, 1040
	ADD	R2, R2, 2
	LDRB	R1, [R11, -21]	
	LDR	R3, [R11, -40]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -36]
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L178
L178
	MOV	R0, R4
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END INT32TOFLOAT64;

PROCEDURE FLOAT32TOINT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 32
	STR	R0, [R11, -16]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -24]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -17]
	LDR	R3, [R11, -24]
	SUB	R2, R3, 150
	STR	R2, [R11, -28]
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BLT	L185
	LDR	R3, [R11, -24]
	CMP	R3, 157
	BLE	L186
	LDR	R3, [R11, -16]
	CMP	R3, 0CF000000H
	BNE	L187
	MOV	R0, 080000000H
	B	L184
L187
	MOV	R0, 1
	BL	FLOATRAISE
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L189
	LDR	R3, [R11, -24]
	CMP	R3, 255
	BNE	L188
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L189
	B	L188
L189
	MVN	R0, 080000000H
	B	L184
L188
	MOV	R0, 080000000H
	B	L184
L186
	LDR	R2, [R11, -32]
	ORR	R3, R2, 8388608
	LDR	R2, [R11, -28]
	MOV	R3, R3, LSL R2
	STR	R3, [R11, -40]
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L190
	LDR	R3, [R11, -40]
	RSB	R2, R3, 0
	STR	R2, [R11, -40]
L190
	B	L191
L185
	LDR	R3, [R11, -24]
	CMP	R3, 125
	BGT	L192
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -32]
	ORR	R3, R3, R2
	STR	R3, [R11, -36]
	MOV	R3, 0
	STR	R3, [R11, -40]
	B	L193
L192
	LDR	R3, [R11, -32]
	ORR	R2, R3, 8388608
	STR	R2, [R11, -32]
	LDR	R2, [R11, -28]
	AND	R3, R2, 31
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSL R3
	STR	R3, [R11, -36]
	LDR	R2, [R11, -28]
	RSB	R3, R2, 0
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -40]
L193
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BEQ	L194
	(* LDR	R3, L206 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L206 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L194
	(* LDR	R3, L206+4 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -41]
	LDRB	R3, [R11, -41]	
	CMP	R3, 0
	BNE	L195
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BGE	L196
	LDR	R2, [R11, -40]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -40]
	LDR	R3, [R11, -36]
	LDR	R2, [R11, -36]
	ADD	R3, R3, R2
	CMP	R3, 0
	BNE	L197
	LDR	R3, [R11, -40]
	BIC	R2, R3, 1
	STR	R2, [R11, -40]
L197
L196
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L198
	LDR	R3, [R11, -40]
	RSB	R2, R3, 0
	STR	R2, [R11, -40]
L198
	B	L199
L195
	LDR	R3, [R11, -36]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	STR	R3, [R11, -36]
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L200
	LDRB	R3, [R11, -41]	
	CMP	R3, 2
	BNE	L201
	LDR	R2, [R11, -36]
	AND	R3, R2, 1
	LDR	R2, [R11, -40]
	ADD	R3, R3, R2
	B	L202
L201
	LDR	R3, [R11, -40]
L202
	STR	R3, [R11, -40]
	LDR	R3, [R11, -40]
	RSB	R2, R3, 0
	STR	R2, [R11, -40]
	B	L203
L200
	LDRB	R3, [R11, -41]	
	CMP	R3, 1
	BNE	L204
	LDR	R2, [R11, -36]
	AND	R3, R2, 1
	LDR	R2, [R11, -40]
	ADD	R3, R3, R2
	B	L205
L204
	LDR	R3, [R11, -40]
L205
	STR	R3, [R11, -40]
L203
L199
L191
	LDR	R0, [R11, -40]
	B	L184
L207
	
(*
L206
	.WORD	FLOATEXCEPTIONFLAGS
	.WORD	FLOATROUNDINGMODE
*)
L184
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32TOINT32;

PROCEDURE FLOAT32TOINT32ROUNDTOZERO;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 24
	STR	R0, [R11, -16]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -24]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -17]
	LDR	R3, [R11, -24]
	SUB	R2, R3, 158
	STR	R2, [R11, -28]
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BLT	L209
	LDR	R3, [R11, -16]
	CMP	R3, 0CF000000H
	BNE	L210
	MOV	R0, 080000000H
	B	L208
L210
	MOV	R0, 1
	BL	FLOATRAISE
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L212
	LDR	R3, [R11, -24]
	CMP	R3, 255
	BNE	L211
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L212
	B	L211
L212
	MVN	R0, 080000000H
	B	L208
L211
	MOV	R0, 080000000H
	B	L208
	B	L213
L209
	LDR	R3, [R11, -24]
	CMP	R3, 126
	BGT	L214
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -32]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L215
	(* LDR	R3, L218 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L218 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L215
	MOV	R0, 0
	B	L208
L214
L213
	LDR	R2, [R11, -32]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -32]
	LDR	R2, [R11, -28]
	RSB	R3, R2, 0
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -36]
	LDR	R2, [R11, -28]
	AND	R3, R2, 31
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSL R3
	CMP	R3, 0
	BEQ	L216
	(* LDR	R3, L218 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L218 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L216
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L217
	LDR	R3, [R11, -36]
	RSB	R2, R3, 0
	STR	R2, [R11, -36]
L217
	LDR	R0, [R11, -36]
	B	L208
L219
	
(*
L218
	.WORD	FLOATEXCEPTIONFLAGS
*)
L208
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32TOINT32ROUNDTOZERO;

PROCEDURE FLOAT32TOFLOAT64;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 24
	MOV	R4, R0
	STR	R1, [R11, -20]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -28]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R3, [R11, -28]
	CMP	R3, 255
	BNE	L221
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BEQ	L222
	MOV	R0, R4
	LDR	R1, [R11, -20]
	BL	FLOAT32TOFLOAT64NAN
	B	L220
L222
	LDRB	R1, [R11, -21]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L220
L221
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BNE	L223
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L224
	LDRB	R1, [R11, -21]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L220
L224
	SUB	R3, R11, 32
	SUB	R1, R11, 28
	MOV	R2, R3
	LDR	R0, [R11, -32]
	BL	NORMALIZEFLOAT32SUBNORMAL
	LDR	R2, [R11, -28]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -28]
L223
	SUB	R3, R11, 36
	SUB	R2, R11, 40
	STR	R2, [R13, -4]!
	MOV	R2, 3
	MOV	R1, 0
	LDR	R0, [R11, -32]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
	LDR	R3, [R11, -28]
	ADD	R2, R3, 896
	LDRB	R1, [R11, -21]	
	LDR	R3, [R11, -40]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -36]
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L220
L220
	MOV	R0, R4
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT32TOFLOAT64;

PROCEDURE FLOAT64TOINT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 44
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -25]
	LDR	R2, [R11, -32]
	SUB	R3, R2, 1040
	SUB	R3, R3, 3
	STR	R3, [R11, -36]
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BLT	L226
	LDR	R3, [R11, -36]
	CMP	R3, 11
	BLE	L227
	LDR	R3, [R11, -32]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L228
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L228
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -25]
L228
	MOV	R3, 0C0000000H
	STR	R3, [R11, -48]
	B	L229
L227
	SUB	R3, R11, 48
	LDR	R2, [R11, -40]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 52
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -44]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -48]
	CMP	R3, 0C0000000H
	BLS	L230
	MOV	R3, 0C0000000H
	STR	R3, [R11, -48]
L230
L229
	B	L231
L226
	LDR	R3, [R11, -44]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	STR	R3, [R11, -44]
	LDR	R3, [R11, -32]
	MOV	R2, 1020
	ADD	R2, R2, 1
	CMP	R3, R2
	BGT	L232
	LDR	R3, [R11, -32]
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	STR	R3, [R11, -52]
	MOV	R3, 0
	STR	R3, [R11, -48]
	B	L233
L232
	LDR	R3, [R11, -40]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -40]
	LDR	R2, [R11, -36]
	AND	R3, R2, 31
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSL R3
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	STR	R3, [R11, -52]
	LDR	R2, [R11, -36]
	RSB	R3, R2, 0
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -48]
L233
L231
	(* LDR	R3, L252 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -57]
	LDRB	R3, [R11, -57]	
	CMP	R3, 0
	BNE	L234
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BGE	L235
	LDR	R2, [R11, -48]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -48]
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -52]
	ADD	R3, R3, R2
	CMP	R3, 0
	BNE	L236
	LDR	R3, [R11, -48]
	BIC	R2, R3, 1
	STR	R2, [R11, -48]
L236
L235
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L237
	LDR	R2, [R11, -48]
	RSB	R3, R2, 0
	B	L238
L237
	LDR	R3, [R11, -48]
L238
	STR	R3, [R11, -56]
	B	L239
L234
	LDR	R3, [R11, -52]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	STR	R3, [R11, -52]
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L240
	LDRB	R3, [R11, -57]	
	CMP	R3, 2
	BNE	L241
	LDR	R2, [R11, -52]
	AND	R3, R2, 1
	LDR	R2, [R11, -48]
	ADD	R3, R3, R2
	RSB	R3, R3, 0
	B	L242
L241
	LDR	R2, [R11, -48]
	RSB	R3, R2, 0
L242
	STR	R3, [R11, -56]
	B	L243
L240
	LDRB	R3, [R11, -57]	
	CMP	R3, 1
	BNE	L244
	LDR	R2, [R11, -52]
	AND	R3, R2, 1
	LDR	R2, [R11, -48]
	ADD	R3, R3, R2
	B	L245
L244
	LDR	R3, [R11, -48]
L245
	STR	R3, [R11, -56]
L243
L239
	LDRB	R4, [R11, -25]	
	LDR	R3, [R11, -56]
	CMP	R3, 0
	BGE	L247
	EOR	R3, R4, 1
	CMP	R3, 0
	BNE	L248
	B	L246
L247
	CMP	R4, 0
	BNE	L248
	B	L246
L248
	LDR	R3, [R11, -56]
	CMP	R3, 0
	BEQ	L246
	MOV	R0, 1
	BL	FLOATRAISE
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L249
	MOV	R3, 080000000H
	B	L250
L249
	MVN	R3, 080000000H
L250
	MOV	R0, R3
	B	L225
L246
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BEQ	L251
	(* LDR	R3, L252+4 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L252+4 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L251
	LDR	R0, [R11, -56]
	B	L225
L253
	
(*
L252
	.WORD	FLOATROUNDINGMODE
	.WORD	FLOATEXCEPTIONFLAGS
*)
L225
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64TOINT32;

PROCEDURE FLOAT64TOINT32ROUNDTOZERO;
CODE
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -25]
	LDR	R2, [R11, -32]
	SUB	R3, R2, 1040
	SUB	R3, R3, 3
	STR	R3, [R11, -36]
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BLT	L255
	LDR	R3, [R11, -36]
	CMP	R3, 11
	BLE	L256
	LDR	R3, [R11, -32]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L257
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L257
	MOV	R3, 0
	MOV	R2, R3
	STRB	R2, [R11, -25]
L257
	MOV	R3, 0C0000000H
	STR	R3, [R11, -48]
	B	L258
L256
	SUB	R3, R11, 48
	LDR	R2, [R11, -40]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 52
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -44]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
L258
	B	L259
L255
	LDR	R3, [R11, -32]
	MOV	R2, 1020
	ADD	R2, R2, 1
	CMP	R3, R2
	BGT	L260
	LDR	R3, [R11, -32]
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	STR	R3, [R11, -52]
	MOV	R3, 0
	STR	R3, [R11, -48]
	B	L261
L260
	LDR	R3, [R11, -40]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -40]
	LDR	R2, [R11, -36]
	AND	R3, R2, 31
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSL R3
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	STR	R3, [R11, -52]
	LDR	R2, [R11, -36]
	RSB	R3, R2, 0
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -48]
L261
L259
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L262
	LDR	R2, [R11, -48]
	RSB	R3, R2, 0
	B	L263
L262
	LDR	R3, [R11, -48]
L263
	STR	R3, [R11, -56]
	LDRB	R4, [R11, -25]	
	LDR	R3, [R11, -56]
	CMP	R3, 0
	BGE	L265
	EOR	R3, R4, 1
	CMP	R3, 0
	BNE	L266
	B	L264
L265
	CMP	R4, 0
	BNE	L266
	B	L264
L266
	LDR	R3, [R11, -56]
	CMP	R3, 0
	BEQ	L264
	MOV	R0, 1
	BL	FLOATRAISE
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L267
	MOV	R3, 080000000H
	B	L268
L267
	MVN	R3, 080000000H
L268
	MOV	R0, R3
	B	L254
L264
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BEQ	L269
	(* LDR	R3, L270 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L270 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L269
	LDR	R0, [R11, -56]
	B	L254
L271
	
(*
L270
	.WORD	FLOATEXCEPTIONFLAGS
*)
L254
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64TOINT32ROUNDTOZERO;

PROCEDURE FLOAT64TOFLOAT32;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 32
	STR	R0, [R11, -20]
	STR	R1, [R11, -16]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -36]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -28]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R3, [R11, -28]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L273
	LDR	R3, [R11, -32]
	LDR	R2, [R11, -36]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L274
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	FLOAT64TOFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L272
L274
	LDRB	R3, [R11, -21]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L272
L273
	SUB	R3, R11, 44
	SUB	R2, R11, 40
	STR	R2, [R13, -4]!
	MOV	R2, 22
	LDR	R1, [R11, -36]
	LDR	R0, [R11, -32]
	BL	SHIFTDOWN64JAMMING
	ADD	R13, R13, 4
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BEQ	L275
	LDR	R3, [R11, -40]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -40]
L275
	LDR	R2, [R11, -28]
	SUB	R3, R2, 896
	SUB	R3, R3, 1
	LDRB	R12, [R11, -21]	
	LDR	R2, [R11, -40]
	MOV	R1, R3
	MOV	R0, R12
	BL	ROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L272
L272
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT64TOFLOAT32;

PROCEDURE FLOAT32ROUNDTOINT;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 28
	STR	R0, [R11, -24]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R3, [R11, -32]
	CMP	R3, 149
	BLE	L277
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L278
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BEQ	L278
	LDR	R1, [R11, -24]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L276
L278
	LDR	R0, [R11, -24]
	B	L276
L277
	LDR	R3, [R11, -32]
	CMP	R3, 126
	BGT	L279
	LDR	R2, [R11, -24]
	MOV	R3, R2, LSL 1
	CMP	R3, 0
	BNE	L280
	LDR	R0, [R11, -24]
	B	L276
L280 
	(* LDR	R3, L301 *) ADDR R3,ExceptionFlags
	(* LDR	R2, L301 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -25]
	(* LDR	R2, L301+4 *) ADDR R2, RoundingMode
	LDRB	R3, [R2, 0]	
	CMP	R3, 1
	BEQ	L287
	CMP	R3, 1
	BGT	L292
	CMP	R3, 0
	BEQ	L282
	B	L291
L292
	CMP	R3, 2
	BEQ	L284
	B	L291
L282
	LDR	R3, [R11, -32]
	CMP	R3, 126
	BNE	L283
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BEQ	L283
	LDRB	R3, [R11, -25]	
	MOV	R2, 0
	MOV	R1, 127
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L276
L283
	B	L281
L284
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L285
	MOV	R2, 0
	MOV	R1, 127
	MOV	R0, 1
	BL	PACKFLOAT32
	MOV	R5, R0
	B	L286
L285
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, 0
	BL	PACKFLOAT32
	MOV	R5, R0
L286
	MOV	R0, R5
	B	L276
L287
	LDRB	R3, [R11, -25]	
	CMP	R3, 0
	BEQ	L288
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, 1
	BL	PACKFLOAT32
	MOV	R5, R0
	B	L289
L288
	MOV	R2, 0
	MOV	R1, 127
	MOV	R0, 0
	BL	PACKFLOAT32
	MOV	R5, R0
L289
	MOV	R0, R5
	B	L276
L291
L281
	LDRB	R3, [R11, -25]	
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L276
L279
	LDR	R2, [R11, -32]
	RSB	R3, R2, 150
	MOV	R2, 1
	MOV	R3, R2, LSL R3
	STR	R3, [R11, -36]
	LDR	R3, [R11, -36]
	SUB	R2, R3, 1
	STR	R2, [R11, -40]
	LDR	R3, [R11, -24]
	STR	R3, [R11, -48]
	(* LDR	R3, L301+4 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -41]
	LDRB	R3, [R11, -41]	
	CMP	R3, 0
	BNE	L293
	LDR	R2, [R11, -36]
	MOV	R3, R2, LSR 1
	LDR	R2, [R11, -48]
	ADD	R3, R2, R3
	STR	R3, [R11, -48]
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -40]
	AND	R3, R3, R2
	CMP	R3, 0
	BNE	L294
	LDR	R2, [R11, -36]
	MVN	R3, R2
	LDR	R2, [R11, -48]
	AND	R3, R2, R3
	STR	R3, [R11, -48]
L294
	B	L295
L293
	LDRB	R3, [R11, -41]	
	CMP	R3, 3
	BEQ	L296
	LDR	R0, [R11, -48]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	AND	R4, R3, 255
	LDRB	R3, [R11, -41]	
	CMP	R3, 1
	BNE	L298
	EOR	R3, R4, 1
	CMP	R3, 0
	BNE	L299
	B	L297
L298
	CMP	R4, 0
	BNE	L299
	B	L297
L299
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -40]
	ADD	R3, R3, R2
	STR	R3, [R11, -48]
L297
L296
L295
	LDR	R2, [R11, -40]
	MVN	R3, R2
	LDR	R2, [R11, -48]
	AND	R3, R2, R3
	STR	R3, [R11, -48]
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -24]
	CMP	R3, R2
	BEQ	L300
	(* LDR	R3, L301 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L301 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L300
	LDR	R0, [R11, -48]
	B	L276
L302
	
(*
L301
	.WORD	FLOATEXCEPTIONFLAGS
	.WORD	FLOATROUNDINGMODE
*)
L276
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
END FLOAT32ROUNDTOINT;

PROCEDURE ADDFLOAT32SIGS;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -24]
	STR	R1, [R11, -28]
	MOV	R4, R2
	MOV	R5, R4
	STRB	R5, [R11, -29]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -36]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R3, [R11, -36]
	LDR	R2, [R11, -40]
	RSB	R3, R2, R3
	STR	R3, [R11, -60]
	LDR	R3, [R11, -48]
	MOV	R2, R3, LSL 6
	STR	R2, [R11, -48]
	LDR	R3, [R11, -52]
	MOV	R2, R3, LSL 6
	STR	R2, [R11, -52]
	LDR	R3, [R11, -60]
	CMP	R3, 0
	BLE	L304
	LDR	R3, [R11, -36]
	CMP	R3, 255
	BNE	L305
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BEQ	L306
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L303
L306
	LDR	R0, [R11, -24]
	B	L303
L305
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L307
	LDR	R2, [R11, -60]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -60]
	B	L308
L307
	LDR	R3, [R11, -52]
	ORR	R2, R3, 536870912
	STR	R2, [R11, -52]
L308
	SUB	R3, R11, 52
	MOV	R2, R3
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -52]
	BL	SHIFTDOWN32JAMMING
	LDR	R3, [R11, -36]
	STR	R3, [R11, -44]
	B	L309
L304
	LDR	R3, [R11, -60]
	CMP	R3, 0
	BGE	L310
	LDR	R3, [R11, -40]
	CMP	R3, 255
	BNE	L311
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BEQ	L312
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L303
L312
	LDRB	R3, [R11, -29]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L303
L311
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BNE	L313
	LDR	R2, [R11, -60]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -60]
	B	L314
L313
	LDR	R3, [R11, -48]
	ORR	R2, R3, 536870912
	STR	R2, [R11, -48]
L314
	SUB	R3, R11, 48
	LDR	R2, [R11, -60]
	RSB	R1, R2, 0
	MOV	R2, R3
	LDR	R0, [R11, -48]
	BL	SHIFTDOWN32JAMMING
	LDR	R3, [R11, -40]
	STR	R3, [R11, -44]
	B	L315
L310
	LDR	R3, [R11, -36]
	CMP	R3, 255
	BNE	L316
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L317
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L303
L317
	LDR	R0, [R11, -24]
	B	L303
L316
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BNE	L318
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ADD	R3, R3, R2
	MOV	R2, R3, LSR 6
	LDRB	R3, [R11, -29]	
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L303
L318
	LDR	R2, [R11, -52]
	ADD	R3, R2, 1073741824
	LDR	R2, [R11, -48]
	ADD	R3, R2, R3
	STR	R3, [R11, -56]
	LDR	R3, [R11, -36]
	STR	R3, [R11, -44]
	B	L319
L315
L309
	LDR	R3, [R11, -48]
	ORR	R2, R3, 536870912
	STR	R2, [R11, -48]
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ADD	R3, R3, R2
	MOV	R2, R3, LSL 1
	STR	R2, [R11, -56]
	LDR	R2, [R11, -44]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -44]
	LDR	R3, [R11, -56]
	CMP	R3, 0
	BGE	L320
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ADD	R3, R3, R2
	STR	R3, [R11, -56]
	LDR	R2, [R11, -44]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -44]
L320
	MOV	R0, R0	
L319
	LDRB	R3, [R11, -29]	
	LDR	R2, [R11, -56]
	LDR	R1, [R11, -44]
	MOV	R0, R3
	BL	ROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L303
L303
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
END ADDFLOAT32SIGS;

PROCEDURE SUBFLOAT32SIGS;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -24]
	STR	R1, [R11, -28]
	MOV	R4, R2
	MOV	R5, R4
	STRB	R5, [R11, -29]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -36]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R3, [R11, -36]
	LDR	R2, [R11, -40]
	RSB	R3, R2, R3
	STR	R3, [R11, -60]
	LDR	R3, [R11, -48]
	MOV	R2, R3, LSL 7
	STR	R2, [R11, -48]
	LDR	R3, [R11, -52]
	MOV	R2, R3, LSL 7
	STR	R2, [R11, -52]
	LDR	R3, [R11, -60]
	CMP	R3, 0
	BLE	L322
	B	L323
L322
	LDR	R3, [R11, -60]
	CMP	R3, 0
	BGE	L324
	B	L325
L324
	LDR	R3, [R11, -36]
	CMP	R3, 255
	BNE	L326
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L327
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L321
L327
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L321
L326
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BNE	L328
	MOV	R3, 1
	STR	R3, [R11, -36]
	MOV	R3, 1
	STR	R3, [R11, -40]
L328
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -48]
	CMP	R3, R2
	BCS	L329
	B	L330
L329
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	CMP	R3, R2
	BCS	L331
	B	L332
L331
	(* LDR	R3, L342 *) ADDR R3,RoundingMode
	LDRB	R2, [R3, 0]	
	CMP	R2, 2
	MOVNE	R3, 0
	MOVEQ	R3, 1
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L321
L325
	LDR	R3, [R11, -40]
	CMP	R3, 255
	BNE	L333
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BEQ	L334
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L321
L334
	LDRB	R3, [R11, -29]
	EOR	R2, R3, 1
	AND	R3, R2, 255
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L321
L333
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BNE	L335
	LDR	R2, [R11, -60]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -60]
	B	L336
L335
	LDR	R3, [R11, -48]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -48]
L336
	SUB	R3, R11, 48
	LDR	R2, [R11, -60]
	RSB	R1, R2, 0
	MOV	R2, R3
	LDR	R0, [R11, -48]
	BL	SHIFTDOWN32JAMMING
	LDR	R3, [R11, -52]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -52]
L332
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -48]
	RSB	R3, R2, R3
	STR	R3, [R11, -56]
	LDR	R3, [R11, -40]
	STR	R3, [R11, -44]
	LDRB	R3, [R11, -29]
	EOR	R2, R3, 1
	MOV	R3, R2
	STRB	R3, [R11, -29]
	B	L337
L323
	LDR	R3, [R11, -36]
	CMP	R3, 255
	BNE	L338
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BEQ	L339
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L321
L339
	LDR	R0, [R11, -24]
	B	L321
L338
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L340
	LDR	R2, [R11, -60]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -60]
	B	L341
L340
	LDR	R3, [R11, -52]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -52]
L341
	SUB	R3, R11, 52
	MOV	R2, R3
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -52]
	BL	SHIFTDOWN32JAMMING
	LDR	R3, [R11, -48]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -48]
L330
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	RSB	R3, R2, R3
	STR	R3, [R11, -56]
	LDR	R3, [R11, -36]
	STR	R3, [R11, -44]
L337
	LDR	R2, [R11, -44]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -44]
	LDRB	R3, [R11, -29]	
	LDR	R2, [R11, -56]
	LDR	R1, [R11, -44]
	MOV	R0, R3
	BL	NORMALIZEROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L321
L343
	
(*
L342
	.WORD	FLOATROUNDINGMODE
*)
L321
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
	
END SUBFLOAT32SIGS;

PROCEDURE FLOAT32ADD;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -22]
	LDRB	R3, [R11, -21]	
	LDRB	R2, [R11, -22]	
	CMP	R3, R2
	BNE	L345
	LDRB	R3, [R11, -21]	
	MOV	R2, R3
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	ADDFLOAT32SIGS
	MOV	R3, R0
	MOV	R0, R3
	B	L344
	B	L346
L345
	LDRB	R3, [R11, -21]	
	MOV	R2, R3
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	SUBFLOAT32SIGS
	MOV	R3, R0
	MOV	R0, R3
	B	L344
L346
L344
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32ADD;

PROCEDURE FLOAT32SUB;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -22]
	LDRB	R3, [R11, -21]	
	LDRB	R2, [R11, -22]	
	CMP	R3, R2
	BNE	L348
	LDRB	R3, [R11, -21]	
	MOV	R2, R3
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	SUBFLOAT32SIGS
	MOV	R3, R0
	MOV	R0, R3
	B	L347
	B	L349
L348
	LDRB	R3, [R11, -21]	
	MOV	R2, R3
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	ADDFLOAT32SIGS
	MOV	R3, R0
	MOV	R0, R3
	B	L347
L349
L347
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32SUB;

PROCEDURE FLOAT32MUL;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -28]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -22]
	LDRB	R3, [R11, -21]
	LDRB	R2, [R11, -22]
	EOR	R3, R3, R2
	MOV	R2, R3
	STRB	R2, [R11, -23]
	LDR	R3, [R11, -28]
	CMP	R3, 255
	BNE	L351
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L353
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L352
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L353
	B	L352
L353
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L352
	LDR	R3, [R11, -32]
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L354
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L350
L354
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L351
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L355
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BEQ	L356
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L356
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L357
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L350
L357
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L355
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BNE	L358
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L359
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L359
	SUB	R3, R11, 40
	SUB	R1, R11, 28
	MOV	R2, R3
	LDR	R0, [R11, -40]
	BL	NORMALIZEFLOAT32SUBNORMAL
L358
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L360
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L361
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L361
	SUB	R3, R11, 44
	SUB	R1, R11, 32
	MOV	R2, R3
	LDR	R0, [R11, -44]
	BL	NORMALIZEFLOAT32SUBNORMAL
L360
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -32]
	ADD	R3, R3, R2
	SUB	R2, R3, 127
	STR	R2, [R11, -36]
	LDR	R2, [R11, -40]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 7
	STR	R2, [R11, -40]
	LDR	R2, [R11, -44]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -44]
	SUB	R3, R11, 52
	SUB	R2, R11, 48
	LDR	R1, [R11, -44]
	LDR	R0, [R11, -40]
	BL	MUL32TO64
	LDR	R3, [R11, -52]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R2, [R11, -48]
	ORR	R3, R3, R2
	STR	R3, [R11, -48]
	LDR	R2, [R11, -48]
	MOV	R3, R2, LSL 1
	CMP	R3, 0
	BLT	L362
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -48]
	ADD	R3, R3, R2
	STR	R3, [R11, -48]
	LDR	R2, [R11, -36]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -36]
L362
	LDRB	R3, [R11, -23]	
	LDR	R2, [R11, -48]
	LDR	R1, [R11, -36]
	MOV	R0, R3
	BL	ROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L350
L350
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32MUL;

PROCEDURE FLOAT32DIV;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 52
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -28]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -22]
	LDRB	R3, [R11, -21]
	LDRB	R2, [R11, -22]
	EOR	R3, R3, R2
	MOV	R2, R3
	STRB	R2, [R11, -23]
	LDR	R3, [R11, -28]
	CMP	R3, 255
	BNE	L364
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BEQ	L365
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L365
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L366
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BEQ	L367
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L367
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L363
L366
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L364
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L368
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BEQ	L369
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L369
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L368
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L370
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L371
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L372
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L363
L372
	MOV	R0, 2
	BL	FLOATRAISE
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 255
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L371
	SUB	R3, R11, 44
	SUB	R1, R11, 32
	MOV	R2, R3
	LDR	R0, [R11, -44]
	BL	NORMALIZEFLOAT32SUBNORMAL
L370
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BNE	L373
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L374
	LDRB	R3, [R11, -23]	
	MOV	R2, 0
	MOV	R1, 0
	MOV	R0, R3
	BL	PACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L374
	SUB	R3, R11, 40
	SUB	R1, R11, 28
	MOV	R2, R3
	LDR	R0, [R11, -40]
	BL	NORMALIZEFLOAT32SUBNORMAL
L373
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -32]
	RSB	R3, R2, R3
	ADD	R2, R3, 125
	STR	R2, [R11, -36]
	LDR	R2, [R11, -40]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 7
	STR	R2, [R11, -40]
	LDR	R2, [R11, -44]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -44]
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -40]
	ADD	R3, R3, R2
	LDR	R2, [R11, -44]
	CMP	R2, R3
	BHI	L375
	LDR	R3, [R11, -40]
	MOV	R2, R3, LSR 1
	STR	R2, [R11, -40]
	LDR	R2, [R11, -36]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -36]
L375
	LDR	R2, [R11, -44]
	MOV	R1, 0
	LDR	R0, [R11, -40]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R2, [R11, -48]
	AND	R3, R2, 63
	CMP	R3, 2
	BHI	L376
	SUB	R3, R11, 64
	SUB	R2, R11, 60
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	MUL32TO64
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	LDR	R2, [R11, -60]
	MOV	R1, 0
	LDR	R0, [R11, -40]
	BL	SUB64
	ADD	R13, R13, 8
L377
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BLT	L379
	B	L378
L379
	LDR	R2, [R11, -48]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -48]
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -44]
	MOV	R2, 0
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	ADD64
	ADD	R13, R13, 8
	B	L377
L378
	LDR	R3, [R11, -56]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R2, [R11, -48]
	ORR	R3, R3, R2
	STR	R3, [R11, -48]
L376
	LDRB	R3, [R11, -23]	
	LDR	R2, [R11, -48]
	LDR	R1, [R11, -36]
	MOV	R0, R3
	BL	ROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L363
L363
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32DIV;

PROCEDURE FLOAT32REM;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 56
	STR	R0, [R11, -16]
	STR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -28]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -22]
	LDR	R3, [R11, -28]
	CMP	R3, 255
	BNE	L381
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L383
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L382
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L383
	B	L382
L383
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L380
L382
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L380
L381
	LDR	R3, [R11, -32]
	CMP	R3, 255
	BNE	L384
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BEQ	L385
	LDR	R1, [R11, -20]
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L380
L385
	LDR	R0, [R11, -16]
	B	L380
L384
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L386
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L387
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L380
L387
	SUB	R3, R11, 44
	SUB	R1, R11, 32
	MOV	R2, R3
	LDR	R0, [R11, -44]
	BL	NORMALIZEFLOAT32SUBNORMAL
L386
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BNE	L388
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L389
	LDR	R0, [R11, -16]
	B	L380
L389
	SUB	R3, R11, 40
	SUB	R1, R11, 28
	MOV	R2, R3
	LDR	R0, [R11, -40]
	BL	NORMALIZEFLOAT32SUBNORMAL
L388
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -32]
	RSB	R3, R2, R3
	STR	R3, [R11, -36]
	LDR	R2, [R11, -40]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -40]
	LDR	R2, [R11, -44]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -44]
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BGE	L390
	LDR	R3, [R11, -36]
	CMN	R3, 1
	BGE	L391
	LDR	R0, [R11, -16]
	B	L380
L391
	LDR	R3, [R11, -40]
	MOV	R2, R3, LSR 1
	STR	R2, [R11, -40]
L390
	LDR	R3, [R11, -44]
	LDR	R2, [R11, -40]
	CMP	R3, R2
	MOVHI	R3, 0
	MOVLS	R3, 1
	STR	R3, [R11, -48]
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BEQ	L392
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	RSB	R3, R2, R3
	STR	R3, [R11, -40]
L392
	LDR	R3, [R11, -36]
	SUB	R2, R3, 32
	STR	R2, [R11, -36]
L393
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BGT	L395
	B	L394
L395
	LDR	R2, [R11, -44]
	MOV	R1, 0
	LDR	R0, [R11, -40]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R3, [R11, -48]
	CMP	R3, 2
	BLS	L396
	LDR	R2, [R11, -48]
	SUB	R3, R2, 2
	B	L397
L396
	MOV	R3, 0
L397
	STR	R3, [R11, -48]
	SUB	R3, R11, 56
	SUB	R2, R11, 52
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	MUL32TO64
	SUB	R3, R11, 56
	SUB	R2, R11, 60
	STR	R2, [R13, -4]!
	MOV	R2, 30
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSL 30
	LDR	R2, [R11, -56]
	RSB	R3, R2, R3
	STR	R3, [R11, -40]
	LDR	R3, [R11, -36]
	SUB	R2, R3, 30
	STR	R2, [R11, -36]
	B	L393
L394
	LDR	R3, [R11, -36]
	ADD	R2, R3, 32
	STR	R2, [R11, -36]
	LDR	R3, [R11, -36]
	CMP	R3, 0
	BLE	L398
	LDR	R2, [R11, -44]
	MOV	R1, 0
	LDR	R0, [R11, -40]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R3, [R11, -48]
	CMP	R3, 2
	BLS	L399
	LDR	R2, [R11, -48]
	SUB	R3, R2, 2
	B	L400
L399
	MOV	R3, 0
L400
	STR	R3, [R11, -48]
	LDR	R2, [R11, -36]
	RSB	R3, R2, 32
	LDR	R2, [R11, -48]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -48]
	LDR	R3, [R11, -44]
	MOV	R2, R3, LSR 2
	STR	R2, [R11, -44]
	SUB	R3, R11, 56
	SUB	R2, R11, 52
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	MUL32TO64
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSR 1
	LDR	R1, [R11, -36]
	SUB	R2, R1, 1
	MOV	R3, R3, LSL R2
	LDR	R2, [R11, -56]
	RSB	R3, R2, R3
	STR	R3, [R11, -40]
	B	L401
L398
	LDR	R3, [R11, -40]
	MOV	R2, R3, LSR 2
	STR	R2, [R11, -40]
	LDR	R3, [R11, -44]
	MOV	R2, R3, LSR 2
	STR	R2, [R11, -44]
L401
	MOV	R0, R0	
L402
	LDR	R3, [R11, -40]
	STR	R3, [R11, -64]
	LDR	R2, [R11, -48]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -48]
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	RSB	R3, R2, R3
	STR	R3, [R11, -40]
L404
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BGE	L405
	B	L403
L405
	B	L402
L403
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -64]
	ADD	R3, R3, R2
	STR	R3, [R11, -68]
	LDR	R3, [R11, -68]
	CMP	R3, 0
	BLT	L407
	LDR	R3, [R11, -68]
	CMP	R3, 0
	BNE	L406
	LDR	R2, [R11, -48]
	AND	R3, R2, 1
	CMP	R3, 0
	BNE	L407
	B	L406
L407
	LDR	R3, [R11, -64]
	STR	R3, [R11, -40]
L406
	LDR	R2, [R11, -40]
	MOV	R3, R2, LSR 31
	MOV	R2, R3
	STRB	R2, [R11, -23]
	LDRB	R3, [R11, -23]	
	CMP	R3, 0
	BEQ	L408
	LDR	R3, [R11, -40]
	RSB	R2, R3, 0
	STR	R2, [R11, -40]
L408
	LDRB	R3, [R11, -21]
	LDRB	R2, [R11, -23]
	EOR	R1, R3, R2
	AND	R3, R1, 255
	LDR	R2, [R11, -40]
	LDR	R1, [R11, -32]
	MOV	R0, R3
	BL	NORMALIZEROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L380
L380
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32REM;

PROCEDURE FLOAT32SQRT;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -16]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -24]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -17]
	LDR	R3, [R11, -24]
	CMP	R3, 255
	BNE	L410
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BEQ	L411
	MOV	R1, 0
	LDR	R0, [R11, -16]
	BL	PROPAGATEFLOAT32NAN
	MOV	R3, R0
	MOV	R0, R3
	B	L409
L411
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BNE	L412
	LDR	R0, [R11, -16]
	B	L409
L412
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L409
L410
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L413
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -32]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L414
	LDR	R0, [R11, -16]
	B	L409
L414
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 080000000H
	MOV	R0, R0, ASR 9
	B	L409
L413
	LDR	R3, [R11, -24]
	CMP	R3, 0
	BNE	L415
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BNE	L416
	MOV	R0, 0
	B	L409
L416
	SUB	R3, R11, 32
	SUB	R1, R11, 24
	MOV	R2, R3
	LDR	R0, [R11, -32]
	BL	NORMALIZEFLOAT32SUBNORMAL
L415
	LDR	R2, [R11, -24]
	SUB	R3, R2, 127
	MOV	R2, R3, ASR 1
	ADD	R3, R2, 126
	STR	R3, [R11, -28]
	LDR	R2, [R11, -32]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -32]
	LDR	R1, [R11, -32]
	LDR	R0, [R11, -24]
	BL	ESTIMATESQRT32
	MOV	R3, R0
	STR	R3, [R11, -36]
	LDR	R3, [R11, -36]
	CMN	R3, 3
	BHI	L417
	LDR	R2, [R11, -36]
	ADD	R3, R2, 2
	B	L418
L417
	MVN	R3, 0
L418
	STR	R3, [R11, -36]
	LDR	R2, [R11, -36]
	AND	R3, R2, 127
	CMP	R3, 5
	BHI	L419
	LDR	R2, [R11, -24]
	AND	R3, R2, 1
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -32]
	SUB	R3, R11, 52
	SUB	R2, R11, 48
	LDR	R1, [R11, -36]
	LDR	R0, [R11, -36]
	BL	MUL32TO64
	SUB	R3, R11, 44
	STR	R3, [R13, -4]!
	SUB	R3, R11, 40
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -48]
	MOV	R1, 0
	LDR	R0, [R11, -32]
	BL	SUB64
	ADD	R13, R13, 8
L420
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BLT	L422
	B	L421
L422
	LDR	R2, [R11, -36]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -36]
	SUB	R3, R11, 48
	SUB	R2, R11, 52
	STR	R2, [R13, -4]!
	MOV	R2, 1
	LDR	R1, [R11, -36]
	MOV	R0, 0
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -52]
	ORR	R2, R3, 1
	STR	R2, [R11, -52]
	SUB	R3, R11, 44
	STR	R3, [R13, -4]!
	SUB	R3, R11, 40
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -48]
	LDR	R1, [R11, -44]
	LDR	R0, [R11, -40]
	BL	ADD64
	ADD	R13, R13, 8
	B	L420
L421
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	ORR	R3, R3, R2
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R2, [R11, -36]
	ORR	R3, R3, R2
	STR	R3, [R11, -36]
L419
	SUB	R3, R11, 36
	MOV	R2, R3
	MOV	R1, 1
	LDR	R0, [R11, -36]
	BL	SHIFTDOWN32JAMMING
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -28]
	MOV	R0, 0
	BL	ROUNDANDPACKFLOAT32
	MOV	R3, R0
	MOV	R0, R3
	B	L409
L409
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT32SQRT;

PROCEDURE FLOAT32EQ;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -20]
	STR	R1, [R11, -24]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L426
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L425
	B	L426
L426
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L424
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L425
	B	L424
L425
	LDR	R0, [R11, -20]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L428
	LDR	R0, [R11, -24]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L428
	B	L427
L428
	MOV	R0, 1
	BL	FLOATRAISE
L427
	MOV	R0, 0
	B	L423
L424
	MOV	R4, 0
	LDR	R3, [R11, -20]
	LDR	R2, [R11, -24]
	CMP	R3, R2
	BEQ	L430
	LDR	R1, [R11, -24]
	LDR	R0, [R11, -20]
	BL	BOTHZEROFLOAT32
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L430
	B	L429
L430
	MOV	R4, 1
L429
	MOV	R0, R4
	B	L423
L423
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT32EQ;

PROCEDURE FLOAT32LE;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	STR	R0, [R11, -24]
	STR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L434
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L433
	B	L434
L434
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L432
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L433
	B	L432
L433
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L431
L432
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -29]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -30]
	LDRB	R3, [R11, -29]	
	LDRB	R2, [R11, -30]	
	CMP	R3, R2
	BEQ	L435
	MOV	R5, 0
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BNE	L437
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	BOTHZEROFLOAT32
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L437
	B	L436
L437
	MOV	R5, 1
L436
	MOV	R0, R5
	B	L431
L435
	MOV	R3, 0
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BEQ	L439
	LDRB	R4, [R11, -29]	
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BCS	L440
	EOR	R2, R4, 1
	CMP	R2, 0
	BNE	L439
	B	L438
L440
	CMP	R4, 0
	BNE	L439
	B	L438
L441
L439
	MOV	R3, 1
L438
	MOV	R0, R3
	B	L431
L431
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
	
END FLOAT32LE;

PROCEDURE FLOAT32LT;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	STR	R0, [R11, -24]
	STR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L445
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L444
	B	L445
L445
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L443
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L444
	B	L443
L444
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L442
L443
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -29]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -30]
	LDRB	R3, [R11, -29]	
	LDRB	R2, [R11, -30]	
	CMP	R3, R2
	BEQ	L446
	MOV	R5, 0
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BEQ	L447
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	BOTHZEROFLOAT32
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L447
	MOV	R5, 1
L447
	MOV	R0, R5
	B	L442
L446
	MOV	R3, 0
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BEQ	L448
	LDRB	R4, [R11, -29]	
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BCS	L449
	EOR	R2, R4, 1
	CMP	R2, 0
	BNE	L450
	B	L448
L449
	CMP	R4, 0
	BNE	L450
	B	L448
L450
	MOV	R3, 1
L448
	MOV	R0, R3
	B	L442
L442
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
	
END FLOAT32LT;

PROCEDURE FLOAT32EQSIGNALING;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 8
	STR	R0, [R11, -20]
	STR	R1, [R11, -24]
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L454
	LDR	R0, [R11, -20]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L453
	B	L454
L454
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L452
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L453
	B	L452
L453
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L451
L452
	MOV	R4, 0
	LDR	R3, [R11, -20]
	LDR	R2, [R11, -24]
	CMP	R3, R2
	BEQ	L456
	LDR	R1, [R11, -24]
	LDR	R0, [R11, -20]
	BL	BOTHZEROFLOAT32
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L456
	B	L455
L456
	MOV	R4, 1
L455
	MOV	R0, R4
	B	L451
L451
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT32EQSIGNALING;

PROCEDURE FLOAT32LEQUIET;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	STR	R0, [R11, -24]
	STR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L460
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L459
	B	L460
L460
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L458
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L459
	B	L458
L459
	LDR	R0, [R11, -24]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L462
	LDR	R0, [R11, -28]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L462
	B	L461
L462
	MOV	R0, 1
	BL	FLOATRAISE
L461
	MOV	R0, 0
	B	L457
L458
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -29]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -30]
	LDRB	R3, [R11, -29]	
	LDRB	R2, [R11, -30]	
	CMP	R3, R2
	BEQ	L463
	MOV	R5, 0
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BNE	L465
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	BOTHZEROFLOAT32
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L465
	B	L464
L465
	MOV	R5, 1
L464
	MOV	R0, R5
	B	L457
L463
	MOV	R3, 0
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BEQ	L467
	LDRB	R4, [R11, -29]	
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BCS	L468
	EOR	R2, R4, 1
	CMP	R2, 0
	BNE	L467
	B	L466
L468
	CMP	R4, 0
	BNE	L467
	B	L466
L469
L467
	MOV	R3, 1
L466
	MOV	R0, R3
	B	L457
L457
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
	
END FLOAT32LEQUIET;

PROCEDURE FLOAT32LTQUIET;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 12
	STR	R0, [R11, -24]
	STR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L473
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L472
	B	L473
L473
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	CMP	R3, 255
	BNE	L471
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	CMP	R3, 0
	BNE	L472
	B	L471
L472
	LDR	R0, [R11, -24]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L475
	LDR	R0, [R11, -28]
	BL	FLOAT32ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L475
	B	L474
L475
	MOV	R0, 1
	BL	FLOATRAISE
L474
	MOV	R0, 0
	B	L470
L471
	LDR	R0, [R11, -24]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -29]
	LDR	R0, [R11, -28]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -30]
	LDRB	R3, [R11, -29]	
	LDRB	R2, [R11, -30]	
	CMP	R3, R2
	BEQ	L476
	MOV	R5, 0
	LDRB	R3, [R11, -29]	
	CMP	R3, 0
	BEQ	L477
	LDR	R1, [R11, -28]
	LDR	R0, [R11, -24]
	BL	BOTHZEROFLOAT32
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L477
	MOV	R5, 1
L477
	MOV	R0, R5
	B	L470
L476
	MOV	R3, 0
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BEQ	L478
	LDRB	R4, [R11, -29]	
	LDR	R2, [R11, -24]
	LDR	R1, [R11, -28]
	CMP	R2, R1
	BCS	L479
	EOR	R2, R4, 1
	CMP	R2, 0
	BNE	L480
	B	L478
L479
	CMP	R4, 0
	BNE	L480
	B	L478
L480
	MOV	R3, 1
L478
	MOV	R0, R3
	B	L470
L470
	LDMEA	R11, {R4, R5, R11, R13, R15}

	
	
	
	
END FLOAT32LTQUIET;

PROCEDURE FLOAT64ROUNDTOINT;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R7, R8, R9, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 60
	MOV	R4, R0
	STR	R1, [R11, -44]
	STR	R2, [R11, -40]
	LDR	R0, [R11, -44]
	LDR	R1, [R11, -40]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R3, [R11, -52]
	MOV	R2, 1040
	ADD	R2, R2, 2
	CMP	R3, R2
	BLE	L482
	LDR	R3, [R11, -52]
	MOV	R2, 1072
	ADD	R2, R2, 2
	CMP	R3, R2
	BLE	L483
	LDR	R3, [R11, -52]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L484
	LDR	R0, [R11, -44]
	LDR	R1, [R11, -40]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R8, R0
	LDR	R0, [R11, -44]
	LDR	R1, [R11, -40]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R8, R3
	CMP	R2, 0
	BEQ	L484
	LDR	R3, [R11, -40]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -44]
	MOV	R0, R4
	LDR	R1, [R11, -44]
	LDR	R2, [R11, -40]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L481
L484
	LDR	R6, [R11, -44]
	LDR	R7, [R11, -40]
	STMIA	R4, {R6,R7}
	B	L481
L483
	LDR	R2, [R11, -52]
	RSB	R3, R2, 1072
	ADD	R3, R3, 2
	MOV	R2, 1
	MOV	R3, R2, LSL R3
	MOV	R2, R3, LSL 1
	STR	R2, [R11, -56]
	LDR	R3, [R11, -56]
	SUB	R2, R3, 1
	STR	R2, [R11, -60]
	LDR	R6, [R11, -44]
	LDR	R7, [R11, -40]
	STR	R6, [R11, -72]
	STR	R7, [R11, -68]
	(* LDR	R3, L520 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -61]
	LDRB	R3, [R11, -61]	
	CMP	R3, 0
	BNE	L485
	LDR	R3, [R11, -56]
	CMP	R3, 0
	BEQ	L486
	LDR	R2, [R11, -56]
	MOV	R3, R2, LSR 1
	SUB	R2, R11, 72
	ADD	R1, R2, 4
	STR	R1, [R13, -4]!
	SUB	R2, R11, 72
	STR	R2, [R13, -4]!
	MOV	R2, 0
	LDR	R1, [R11, -68]
	LDR	R0, [R11, -72]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -60]
	AND	R3, R3, R2
	CMP	R3, 0
	BNE	L487
	LDR	R2, [R11, -56]
	MVN	R3, R2
	LDR	R2, [R11, -68]
	AND	R3, R2, R3
	STR	R3, [R11, -68]
L487
	B	L488
L486
	LDR	R3, [R11, -68]
	CMP	R3, 0
	BGE	L489
	LDR	R2, [R11, -72]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -72]
	LDR	R2, [R11, -68]
	MOV	R3, R2, LSL 1
	CMP	R3, 0
	BNE	L490
	LDR	R3, [R11, -72]
	BIC	R2, R3, 1
	STR	R2, [R11, -72]
L490
L489
L488
	B	L491
L485
	LDRB	R3, [R11, -61]	
	CMP	R3, 3
	BEQ	L492
	LDR	R0, [R11, -72]
	LDR	R1, [R11, -68]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	AND	R5, R3, 255
	LDRB	R3, [R11, -61]	
	CMP	R3, 1
	BNE	L494
	EOR	R3, R5, 1
	CMP	R3, 0
	BNE	L495
	B	L493
L494
	CMP	R5, 0
	BNE	L495
	B	L493
L495
	SUB	R3, R11, 72
	ADD	R2, R3, 4
	STR	R2, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -60]
	MOV	R2, 0
	LDR	R1, [R11, -68]
	LDR	R0, [R11, -72]
	BL	ADD64
	ADD	R13, R13, 8
L493
L492
L491
	LDR	R2, [R11, -60]
	MVN	R3, R2
	LDR	R2, [R11, -68]
	AND	R3, R2, R3
	STR	R3, [R11, -68]
	B	L496
L482
	LDR	R3, [R11, -52]
	MOV	R2, 1020
	ADD	R2, R2, 2
	CMP	R3, R2
	BGT	L497
	LDR	R2, [R11, -44]
	MOV	R3, R2, LSL 1
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L498
	LDR	R6, [R11, -44]
	LDR	R7, [R11, -40]
	STMIA	R4, {R6,R7}
	B	L481
L498
	(* LDR	R3, L520+4 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L520+4 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
	LDR	R0, [R11, -44]
	LDR	R1, [R11, -40]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -45]
	(* LDR	R2, L520 *) ADDR R2,RoundingMode
	LDRB	R3, [R2, 0]	
	CMP	R3, 1
	BEQ	L505
	CMP	R3, 1
	BGT	L510
	CMP	R3, 0
	BEQ	L500
	B	L509
L510
	CMP	R3, 2
	BEQ	L502
	B	L509
L500
	LDR	R3, [R11, -52]
	MOV	R2, 1020
	ADD	R2, R2, 2
	CMP	R3, R2
	BNE	L501
	LDR	R0, [R11, -44]
	LDR	R1, [R11, -40]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R8, R0
	LDR	R0, [R11, -44]
	LDR	R1, [R11, -40]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R8, R3
	CMP	R2, 0
	BEQ	L501
	LDRB	R1, [R11, -45]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 1020
	ADD	R2, R2, 3
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L481
L501
	B	L499
L502
	LDRB	R3, [R11, -45]	
	CMP	R3, 0
	BEQ	L503
	MOV	R3, 0
	STR	R3, [R13, -4]!
	SUB	R3, R11, 80
	MOV	R0, R3
	MOV	R3, 0
	MOV	R2, 1020
	ADD	R2, R2, 3
	MOV	R1, 1
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	LDR	R8, [R11, -80]
	LDR	R9, [R11, -76]
	B	L504
L503
	MOV	R3, 0
	STR	R3, [R13, -4]!
	SUB	R3, R11, 88
	MOV	R0, R3
	MOV	R3, 0
	MOV	R2, 0
	MOV	R1, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	LDR	R8, [R11, -88]
	LDR	R9, [R11, -84]
L504
	STMIA	R4, {R8,R9}
	B	L481
L505
	LDRB	R3, [R11, -45]	
	CMP	R3, 0
	BEQ	L506
	MOV	R3, 0
	STR	R3, [R13, -4]!
	SUB	R3, R11, 88
	MOV	R0, R3
	MOV	R3, 0
	MOV	R2, 0
	MOV	R1, 1
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	LDR	R8, [R11, -88]
	LDR	R9, [R11, -84]
	B	L507
L506
	MOV	R3, 0
	STR	R3, [R13, -4]!
	SUB	R3, R11, 80
	MOV	R0, R3
	MOV	R3, 0
	MOV	R2, 1020
	ADD	R2, R2, 3
	MOV	R1, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	LDR	R8, [R11, -80]
	LDR	R9, [R11, -76]
L507
	STMIA	R4, {R8,R9}
	B	L481
L509
L499
	LDRB	R1, [R11, -45]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L481
L521
	
(*
L520
	.WORD	FLOATROUNDINGMODE
	.WORD	FLOATEXCEPTIONFLAGS
*)
L497
	LDR	R2, [R11, -52]
	RSB	R3, R2, 1040
	ADD	R3, R3, 3
	MOV	R2, 1
	MOV	R3, R2, LSL R3
	STR	R3, [R11, -56]
	LDR	R3, [R11, -56]
	SUB	R2, R3, 1
	STR	R2, [R11, -60]
	MOV	R3, 0
	STR	R3, [R11, -68]
	LDR	R3, [R11, -44]
	STR	R3, [R11, -72]
	(* LDR	R3, L522 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]
	STRB	R2, [R11, -61]
	LDRB	R3, [R11, -61]	
	CMP	R3, 0
	BNE	L511
	LDR	R2, [R11, -56]
	MOV	R3, R2, LSR 1
	LDR	R2, [R11, -72]
	ADD	R3, R2, R3
	STR	R3, [R11, -72]
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -60]
	AND	R3, R3, R2
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L512
	LDR	R2, [R11, -56]
	MVN	R3, R2
	LDR	R2, [R11, -72]
	AND	R3, R2, R3
	STR	R3, [R11, -72]
L512
	B	L513
L511
	LDRB	R3, [R11, -61]	
	CMP	R3, 3
	BEQ	L514
	LDR	R0, [R11, -72]
	LDR	R1, [R11, -68]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	AND	R7, R3, 255
	STR	R7, [R11, -96]
	LDRB	R3, [R11, -61]	
	CMP	R3, 1
	BNE	L516
	LDR	R6, [R11, -96]
	EOR	R3, R6, 1
	CMP	R3, 0
	BNE	L517
	B	L515
L516
	LDR	R7, [R11, -96]
	CMP	R7, 0
	BNE	L517
	B	L515
L517
	LDR	R6, [R11, -72]
	STR	R6, [R11, -92]
	LDR	R3, [R11, -40]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R7, [R11, -92]
	ORR	R3, R3, R7
	STR	R3, [R11, -72]
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -60]
	ADD	R3, R3, R2
	STR	R3, [R11, -72]
L515
L514
L513
	LDR	R2, [R11, -60]
	MVN	R3, R2
	LDR	R2, [R11, -72]
	AND	R3, R2, R3
	STR	R3, [R11, -72]
L496
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -40]
	CMP	R3, R2
	BNE	L519
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -44]
	CMP	R3, R2
	BNE	L519
	B	L518
L519
	(* LDR	R3, L522+4 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L522+4 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L518
	LDR	R6, [R11, -72]
	LDR	R7, [R11, -68]
	STMIA	R4, {R6,R7}
	B	L481
L523
	
(*
L522
	.WORD	FLOATROUNDINGMODE
	.WORD	FLOATEXCEPTIONFLAGS
*)
L481
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R7, R8, R9, R11, R13, R15}

	
	
	
END FLOAT64ROUNDTOINT;

PROCEDURE ADDFLOAT64SIGS;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R5, R6, R7, R8, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 56
	MOV	R4, R0
	STR	R1, [R11, -40]
	STR	R2, [R11, -36]
	STR	R3, [R11, 4]
	LDR	R5, [R11, 12]
	MOV	R6, R5
	STRB	R6, [R11, -41]
	LDR	R0, [R11, -40]
	LDR	R1, [R11, -36]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -64]
	LDR	R0, [R11, -40]
	LDR	R1, [R11, -36]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -60]
	LDR	R0, [R11, -40]
	LDR	R1, [R11, -36]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -72]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -68]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	RSB	R3, R2, R3
	STR	R3, [R11, -88]
	LDR	R3, [R11, -88]
	CMP	R3, 0
	BLE	L525
	LDR	R3, [R11, -48]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L526
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L527
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L524
L527
	LDR	R7, [R11, -40]
	LDR	R8, [R11, -36]
	STMIA	R4, {R7,R8}
	B	L524
L526
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BNE	L528
	LDR	R2, [R11, -88]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -88]
	B	L529
L528
	LDR	R3, [R11, -68]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -68]
L529
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -88]
	MOV	R2, 0
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
	LDR	R3, [R11, -48]
	STR	R3, [R11, -56]
	B	L530
L525
	LDR	R3, [R11, -88]
	CMP	R3, 0
	BGE	L531
	LDR	R3, [R11, -52]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L532
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -72]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L533
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L524
L533
	LDRB	R1, [R11, -41]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L524
L532
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BNE	L534
	LDR	R2, [R11, -88]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -88]
	B	L535
L534
	LDR	R3, [R11, -60]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -60]
L535
	LDR	R2, [R11, -88]
	RSB	R3, R2, 0
	SUB	R2, R11, 84
	STR	R2, [R13, -4]!
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	SUB	R2, R11, 60
	STR	R2, [R13, -4]!
	MOV	R2, 0
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
	LDR	R3, [R11, -52]
	STR	R3, [R11, -56]
	B	L536
L531
	LDR	R3, [R11, -48]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L537
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	LDR	R2, [R11, -68]
	ORR	R3, R3, R2
	LDR	R2, [R11, -72]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L538
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L524
L538
	LDR	R7, [R11, -40]
	LDR	R8, [R11, -36]
	STMIA	R4, {R7,R8}
	B	L524
L537
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -68]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BNE	L539
	LDRB	R1, [R11, -41]	
	LDR	R3, [R11, -80]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -76]
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L524
L539
	MOV	R3, 0
	STR	R3, [R11, -84]
	LDR	R3, [R11, -76]
	ORR	R2, R3, 2097152
	STR	R2, [R11, -76]
	LDR	R3, [R11, -48]
	STR	R3, [R11, -56]
	B	L540
L536
L530
	LDR	R3, [R11, -60]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -60]
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -68]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R2, [R11, -56]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -56]
	LDR	R3, [R11, -76]
	MVN	R2, 0FF000000H
	SUB	R2, R2, 14680064
	CMP	R3, R2
	BHI	L541
	B	L542
L541
	LDR	R2, [R11, -56]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -56]
L540
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	MOV	R3, 1
	LDR	R2, [R11, -84]
	LDR	R1, [R11, -80]
	LDR	R0, [R11, -76]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
L542
	LDRB	R1, [R11, -41]	
	LDR	R3, [R11, -84]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -80]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -76]
	LDR	R2, [R11, -56]
	BL	ROUNDANDPACKFLOAT64
	ADD	R13, R13, 8
	B	L524
L524
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R7, R8, R11, R13, R15}

	
	
	
END ADDFLOAT64SIGS;

PROCEDURE SUBFLOAT64SIGS;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R5, R6, R7, R8, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 60
	MOV	R4, R0
	STR	R1, [R11, -40]
	STR	R2, [R11, -36]
	STR	R3, [R11, 4]
	LDR	R5, [R11, 12]
	MOV	R6, R5
	STRB	R6, [R11, -41]
	LDR	R0, [R11, -40]
	LDR	R1, [R11, -36]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -64]
	LDR	R0, [R11, -40]
	LDR	R1, [R11, -36]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -60]
	LDR	R0, [R11, -40]
	LDR	R1, [R11, -36]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -72]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -68]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	RSB	R3, R2, R3
	STR	R3, [R11, -84]
	SUB	R3, R11, 60
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	MOV	R2, 10
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	SUB	R3, R11, 68
	SUB	R2, R11, 72
	STR	R2, [R13, -4]!
	MOV	R2, 10
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -84]
	CMP	R3, 0
	BLE	L544
	B	L545
L544
	LDR	R3, [R11, -84]
	CMP	R3, 0
	BGE	L546
	B	L547
L546
	LDR	R3, [R11, -48]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L548
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	LDR	R2, [R11, -68]
	ORR	R3, R3, R2
	LDR	R2, [R11, -72]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L549
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L543
L549
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R3, 0
	STR	R3, [R11, -88]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -92]
	LDR	R7, [R11, -92]
	LDR	R8, [R11, -88]
	STMIA	R4, {R7,R8}
	B	L543
L548
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BNE	L550
	MOV	R3, 1
	STR	R3, [R11, -48]
	MOV	R3, 1
	STR	R3, [R11, -52]
L550
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -60]
	CMP	R3, R2
	BCS	L551
	B	L552
L551
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -68]
	CMP	R3, R2
	BCS	L553
	B	L554
L553
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -64]
	CMP	R3, R2
	BCS	L555
	B	L552
L555
	LDR	R3, [R11, -64]
	LDR	R2, [R11, -72]
	CMP	R3, R2
	BCS	L556
	B	L554
L556
	(* LDR	R3, L566 *) ADDR R3, RoundingMode
	LDRB	R2, [R3, 0]	
	CMP	R2, 2
	MOVNE	R1, 0
	MOVEQ	R1, 1
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L543
L547
	LDR	R3, [R11, -52]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L557
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -72]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L558
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L543
L558
	LDRB	R3, [R11, -41]
	EOR	R2, R3, 1
	AND	R1, R2, 255
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L543
L557
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BNE	L559
	LDR	R2, [R11, -84]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -84]
	B	L560
L559
	LDR	R3, [R11, -60]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -60]
L560
	SUB	R3, R11, 60
	LDR	R1, [R11, -84]
	RSB	R2, R1, 0
	SUB	R1, R11, 64
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SHIFTDOWN64JAMMING
	ADD	R13, R13, 4
	LDR	R3, [R11, -68]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -68]
L554
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SUB64
	ADD	R13, R13, 8
	LDR	R3, [R11, -52]
	STR	R3, [R11, -56]
	LDRB	R3, [R11, -41]
	EOR	R2, R3, 1
	MOV	R3, R2
	STRB	R3, [R11, -41]
	B	L561
L545
	LDR	R3, [R11, -48]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L562
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L563
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -40]
	LDR	R2, [R11, -36]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L543
L563
	LDR	R7, [R11, -40]
	LDR	R8, [R11, -36]
	STMIA	R4, {R7,R8}
	B	L543
L562
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BNE	L564
	LDR	R2, [R11, -84]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -84]
	B	L565
L564
	LDR	R3, [R11, -68]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -68]
L565
	SUB	R3, R11, 68
	SUB	R2, R11, 72
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -84]
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SHIFTDOWN64JAMMING
	ADD	R13, R13, 4
	LDR	R3, [R11, -60]
	ORR	R2, R3, 1073741824
	STR	R2, [R11, -60]
L552
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -68]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SUB64
	ADD	R13, R13, 8
	LDR	R3, [R11, -48]
	STR	R3, [R11, -56]
L561
	LDR	R2, [R11, -56]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -56]
	LDR	R3, [R11, -56]
	SUB	R2, R3, 10
	LDRB	R1, [R11, -41]	
	LDR	R3, [R11, -80]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -76]
	BL	NORMALIZEROUNDANDPACKFLOAT64
	ADD	R13, R13, 4
	B	L543
L567
	
(*
L566
	.WORD	FLOATROUNDINGMODE
*)
L543
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R7, R8, R11, R13, R15}

	
	
	
	
END SUBFLOAT64SIGS;

PROCEDURE FLOAT64ADD;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 12
	MOV	R4, R0
	STR	R1, [R11, -24]
	STR	R2, [R11, -20]
	STR	R3, [R11, 4]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -25]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -26]
	LDRB	R3, [R11, -25]	
	LDRB	R2, [R11, -26]	
	CMP	R3, R2
	BNE	L569
	LDRB	R3, [R11, -25]	
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -24]
	LDR	R2, [R11, -20]
	BL	ADDFLOAT64SIGS
	ADD	R13, R13, 8
	B	L568
	B	L570
L569
	LDRB	R3, [R11, -25]	
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -24]
	LDR	R2, [R11, -20]
	BL	SUBFLOAT64SIGS
	ADD	R13, R13, 8
	B	L568
L570
L568
	MOV	R0, R4
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64ADD;

PROCEDURE FLOAT64SUB;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 12
	MOV	R4, R0
	STR	R1, [R11, -24]
	STR	R2, [R11, -20]
	STR	R3, [R11, 4]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -25]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -26]
	LDRB	R3, [R11, -25]	
	LDRB	R2, [R11, -26]	
	CMP	R3, R2
	BNE	L572
	LDRB	R3, [R11, -25]	
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -24]
	LDR	R2, [R11, -20]
	BL	SUBFLOAT64SIGS
	ADD	R13, R13, 8
	B	L571
	B	L573
L572
	LDRB	R3, [R11, -25]	
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -24]
	LDR	R2, [R11, -20]
	BL	ADDFLOAT64SIGS
	ADD	R13, R13, 8
	B	L571
L573
L571
	MOV	R0, R4
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64SUB;

PROCEDURE FLOAT64MUL;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 64
	MOV	R4, R0
	STR	R1, [R11, -32]
	STR	R2, [R11, -28]
	STR	R3, [R11, 4]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -56]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -33]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -64]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -60]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -34]
	LDRB	R3, [R11, -33]
	LDRB	R2, [R11, -34]
	EOR	R3, R3, R2
	MOV	R2, R3
	STRB	R2, [R11, -35]
	LDR	R3, [R11, -40]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L575
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L577
	LDR	R3, [R11, -44]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L576
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L577
	B	L576
L577
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L574
L576
	LDR	R3, [R11, -44]
	LDR	R2, [R11, -60]
	ORR	R3, R3, R2
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L578
	B	L579
L578
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L574
L575
	LDR	R3, [R11, -44]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L580
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L581
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L574
L581
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L582
L579
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R3, 0
	STR	R3, [R11, -84]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -88]
	LDR	R5, [R11, -88]
	LDR	R6, [R11, -84]
	STMIA	R4, {R5,R6}
	B	L574
L582
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L574
L580
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L583
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L584
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L574
L584
	SUB	R3, R11, 52
	SUB	R2, R11, 40
	SUB	R1, R11, 56
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L583
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L585
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L586
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L574
L586
	SUB	R3, R11, 60
	SUB	R2, R11, 44
	SUB	R1, R11, 64
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L585
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	ADD	R3, R3, R2
	SUB	R2, R3, 1024
	STR	R2, [R11, -48]
	LDR	R3, [R11, -52]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -52]
	SUB	R3, R11, 60
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	MOV	R2, 12
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	MUL64TO128
	ADD	R13, R13, 16
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -56]
	LDR	R2, [R11, -52]
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, -80]
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R2, [R11, -76]
	ORR	R3, R3, R2
	STR	R3, [R11, -76]
	LDR	R3, [R11, -68]
	MVN	R2, 0FF000000H
	SUB	R2, R2, 14680064
	CMP	R3, R2
	BLS	L587
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	MOV	R3, 1
	LDR	R2, [R11, -76]
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
	LDR	R2, [R11, -48]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -48]
L587
	LDRB	R1, [R11, -35]	
	LDR	R3, [R11, -76]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -72]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -48]
	BL	ROUNDANDPACKFLOAT64
	ADD	R13, R13, 8
	B	L574
L574
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
	
END FLOAT64MUL;

PROCEDURE FLOAT64DIV;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 92
	MOV	R4, R0
	STR	R1, [R11, -32]
	STR	R2, [R11, -28]
	STR	R3, [R11, 4]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -56]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -33]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -64]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -60]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -34]
	LDRB	R3, [R11, -33]
	LDRB	R2, [R11, -34]
	EOR	R3, R3, R2
	MOV	R2, R3
	STRB	R2, [R11, -35]
	LDR	R3, [R11, -40]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L589
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L590
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L588
L590
	LDR	R3, [R11, -44]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L591
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L592
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L588
L592
	B	L593
L591
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L588
L589
	LDR	R3, [R11, -44]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L594
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L595
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L588
L595
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L588
L594
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L596
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L597
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L598
L593
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R3, 0
	STR	R3, [R11, -112]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -116]
	LDR	R5, [R11, -116]
	LDR	R6, [R11, -112]
	STMIA	R4, {R5,R6}
	B	L588
L598
	MOV	R0, 2
	BL	FLOATRAISE
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 2032
	ADD	R2, R2, 15
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L588
L597
	SUB	R3, R11, 60
	SUB	R2, R11, 44
	SUB	R1, R11, 64
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L596
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L599
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L600
	LDRB	R1, [R11, -35]	
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L588
L600
	SUB	R3, R11, 52
	SUB	R2, R11, 40
	SUB	R1, R11, 56
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L599
	LDR	R3, [R11, -40]
	LDR	R1, [R11, -44]
	RSB	R2, R1, R3
	ADD	R3, R2, 1020
	ADD	R3, R3, 1
	STR	R3, [R11, -48]
	SUB	R3, R11, 52
	LDR	R2, [R11, -52]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 56
	STR	R2, [R13, -4]!
	MOV	R2, 11
	LDR	R1, [R11, -56]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	SUB	R3, R11, 60
	LDR	R2, [R11, -60]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	MOV	R2, 11
	LDR	R1, [R11, -64]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -56]
	LDR	R2, [R11, -52]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	LE64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BEQ	L601
	SUB	R3, R11, 52
	SUB	R2, R11, 56
	STR	R2, [R13, -4]!
	MOV	R2, 1
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
	LDR	R2, [R11, -48]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -48]
L601
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -68]
	SUB	R3, R11, 96
	SUB	R2, R11, 104
	STR	R2, [R13, -4]!
	SUB	R2, R11, 100
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -68]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	MUL64BY32TO96
	ADD	R13, R13, 8
	SUB	R3, R11, 88
	STR	R3, [R13, -4]!
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -104]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -100]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -96]
	MOV	R2, 0
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SUB96
	ADD	R13, R13, 20
L602
	LDR	R3, [R11, -80]
	CMP	R3, 0
	BLT	L604
	B	L603
L604
	LDR	R2, [R11, -68]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -68]
	SUB	R3, R11, 88
	STR	R3, [R13, -4]!
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -60]
	STR	R3, [R13, -4]!
	MOV	R3, 0
	LDR	R2, [R11, -88]
	LDR	R1, [R11, -84]
	LDR	R0, [R11, -80]
	BL	ADD96
	ADD	R13, R13, 20
	B	L602
L603
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -88]
	LDR	R0, [R11, -84]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -72]
	LDR	R2, [R11, -72]
	MOV	R3, R2, LSL 22
	MOV	R3, R3, LSR 22
	CMP	R3, 4
	BHI	L605
	SUB	R3, R11, 100
	SUB	R2, R11, 108
	STR	R2, [R13, -4]!
	SUB	R2, R11, 104
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -72]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	MUL64BY32TO96
	ADD	R13, R13, 8
	SUB	R3, R11, 92
	STR	R3, [R13, -4]!
	SUB	R3, R11, 88
	STR	R3, [R13, -4]!
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -108]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -104]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -100]
	MOV	R2, 0
	LDR	R1, [R11, -88]
	LDR	R0, [R11, -84]
	BL	SUB96
	ADD	R13, R13, 20
L606
	LDR	R3, [R11, -84]
	CMP	R3, 0
	BLT	L608
	B	L607
L608
	LDR	R2, [R11, -72]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -72]
	SUB	R3, R11, 92
	STR	R3, [R13, -4]!
	SUB	R3, R11, 88
	STR	R3, [R13, -4]!
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -60]
	STR	R3, [R13, -4]!
	MOV	R3, 0
	LDR	R2, [R11, -92]
	LDR	R1, [R11, -88]
	LDR	R0, [R11, -84]
	BL	ADD96
	ADD	R13, R13, 20
	B	L606
L607
	LDR	R3, [R11, -84]
	LDR	R2, [R11, -88]
	ORR	R3, R3, R2
	LDR	R2, [R11, -92]
	ORR	R3, R3, R2
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R2, [R11, -72]
	ORR	R3, R3, R2
	STR	R3, [R11, -72]
L605
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	MOV	R3, 11
	MOV	R2, 0
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
	LDRB	R1, [R11, -35]	
	LDR	R3, [R11, -76]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -72]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -68]
	LDR	R2, [R11, -48]
	BL	ROUNDANDPACKFLOAT64
	ADD	R13, R13, 8
	B	L588
L588
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
	
END FLOAT64DIV;

PROCEDURE FLOAT64REM;
CODE
	
	
	MOV	R12, R13
	SUB	R13, R13, 4
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 8
	SUB	R13, R13, 84
	MOV	R4, R0
	STR	R1, [R11, -32]
	STR	R2, [R11, -28]
	STR	R3, [R11, 4]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -56]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -33]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -64]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -60]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -44]
	LDR	R0, [R11, 4]
	LDR	R1, [R11, 8]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -34]
	LDR	R3, [R11, -40]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L610
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L612
	LDR	R3, [R11, -44]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L611
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L612
	B	L611
L612
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L609
L611
	B	L613
L610
	LDR	R3, [R11, -44]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L614
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L615
	LDR	R3, [R11, 8]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, 4]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L609
L615
	LDR	R5, [R11, -32]
	LDR	R6, [R11, -28]
	STMIA	R4, {R5,R6}
	B	L609
L614
	LDR	R3, [R11, -44]
	CMP	R3, 0
	BNE	L616
	LDR	R3, [R11, -60]
	LDR	R2, [R11, -64]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L617
L613
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R3, 0
	STR	R3, [R11, -104]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -108]
	LDR	R5, [R11, -108]
	LDR	R6, [R11, -104]
	STMIA	R4, {R5,R6}
	B	L609
L617
	SUB	R3, R11, 60
	SUB	R2, R11, 44
	SUB	R1, R11, 64
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L616
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L618
	LDR	R3, [R11, -52]
	LDR	R2, [R11, -56]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L619
	LDR	R5, [R11, -32]
	LDR	R6, [R11, -28]
	STMIA	R4, {R5,R6}
	B	L609
L619
	SUB	R3, R11, 52
	SUB	R2, R11, 40
	SUB	R1, R11, 56
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L618
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -44]
	RSB	R3, R2, R3
	STR	R3, [R11, -48]
	LDR	R3, [R11, -48]
	CMN	R3, 1
	BGE	L620
	LDR	R5, [R11, -32]
	LDR	R6, [R11, -28]
	STMIA	R4, {R5,R6}
	B	L609
L620
	SUB	R3, R11, 52
	LDR	R2, [R11, -48]
	CMP	R2, 0
	BGE	L621
	MOV	R2, 10
	B	L622
L621
	MOV	R2, 11
L622
	LDR	R1, [R11, -52]
	ORR	R12, R1, 1048576
	SUB	R1, R11, 56
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -56]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	SUB	R3, R11, 60
	LDR	R2, [R11, -60]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	MOV	R2, 11
	LDR	R1, [R11, -64]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -56]
	LDR	R2, [R11, -52]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	LE64
	MOV	R3, R0
	AND	R2, R3, 255
	STR	R2, [R11, -68]
	LDR	R3, [R11, -68]
	CMP	R3, 0
	BEQ	L623
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SUB64
	ADD	R13, R13, 8
L623
	LDR	R3, [R11, -48]
	SUB	R2, R3, 32
	STR	R2, [R11, -48]
L624
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BGT	L626
	B	L625
L626
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -68]
	LDR	R3, [R11, -68]
	CMP	R3, 4
	BLS	L627
	LDR	R2, [R11, -68]
	SUB	R3, R2, 4
	B	L628
L627
	MOV	R3, 0
L628
	STR	R3, [R11, -68]
	SUB	R3, R11, 72
	SUB	R2, R11, 80
	STR	R2, [R13, -4]!
	SUB	R2, R11, 76
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -68]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	MUL64BY32TO96
	ADD	R13, R13, 8
	SUB	R3, R11, 84
	STR	R3, [R13, -4]!
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	MOV	R3, 29
	LDR	R2, [R11, -80]
	LDR	R1, [R11, -76]
	LDR	R0, [R11, -72]
	BL	SHORTSHIFTUP96
	ADD	R13, R13, 12
	SUB	R3, R11, 52
	SUB	R2, R11, 84
	STR	R2, [R13, -4]!
	MOV	R2, 29
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -80]
	LDR	R2, [R11, -76]
	MOV	R1, 0
	LDR	R0, [R11, -52]
	BL	SUB64
	ADD	R13, R13, 8
	LDR	R3, [R11, -48]
	SUB	R2, R3, 29
	STR	R2, [R11, -48]
	B	L624
L625
	LDR	R3, [R11, -48]
	CMN	R3, 32
	BLE	L629
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -68]
	LDR	R3, [R11, -68]
	CMP	R3, 4
	BLS	L630
	LDR	R2, [R11, -68]
	SUB	R3, R2, 4
	B	L631
L630
	MOV	R3, 0
L631
	STR	R3, [R11, -68]
	LDR	R2, [R11, -48]
	RSB	R3, R2, 0
	LDR	R2, [R11, -68]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -68]
	SUB	R3, R11, 60
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	MOV	R2, 8
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
	LDR	R3, [R11, -48]
	ADD	R2, R3, 24
	STR	R2, [R11, -48]
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BGE	L632
	SUB	R3, R11, 52
	LDR	R1, [R11, -48]
	RSB	R2, R1, 0
	SUB	R1, R11, 56
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
	B	L633
L632
	SUB	R3, R11, 52
	SUB	R2, R11, 56
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -48]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
L633
	SUB	R3, R11, 72
	SUB	R2, R11, 80
	STR	R2, [R13, -4]!
	SUB	R2, R11, 76
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -68]
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	MUL64BY32TO96
	ADD	R13, R13, 8
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -80]
	LDR	R2, [R11, -76]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SUB64
	ADD	R13, R13, 8
	B	L634
L629
	SUB	R3, R11, 52
	SUB	R2, R11, 56
	STR	R2, [R13, -4]!
	MOV	R2, 8
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
	SUB	R3, R11, 60
	SUB	R2, R11, 64
	STR	R2, [R13, -4]!
	MOV	R2, 8
	LDR	R1, [R11, -64]
	LDR	R0, [R11, -60]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
L634
	MOV	R0, R0	
L635
	LDR	R3, [R11, -52]
	STR	R3, [R11, -88]
	LDR	R3, [R11, -56]
	STR	R3, [R11, -92]
	LDR	R2, [R11, -68]
	ADD	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -68]
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -64]
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	SUB64
	ADD	R13, R13, 8
L637
	LDR	R3, [R11, -52]
	CMP	R3, 0
	BGE	L638
	B	L636
L638
	B	L635
L636
	SUB	R3, R11, 96
	STR	R3, [R13, -4]!
	SUB	R3, R11, 100
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -92]
	LDR	R2, [R11, -88]
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -52]
	BL	ADD64
	ADD	R13, R13, 8
	LDR	R3, [R11, -100]
	CMP	R3, 0
	BLT	L640
	LDR	R3, [R11, -100]
	LDR	R2, [R11, -96]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L639
	LDR	R2, [R11, -68]
	AND	R3, R2, 1
	CMP	R3, 0
	BNE	L640
	B	L639
L640
	LDR	R3, [R11, -88]
	STR	R3, [R11, -52]
	LDR	R3, [R11, -92]
	STR	R3, [R11, -56]
L639
	LDR	R2, [R11, -52]
	MOV	R3, R2, LSR 31
	MOV	R2, R3
	STRB	R2, [R11, -35]
	LDRB	R3, [R11, -35]	
	CMP	R3, 0
	BEQ	L641
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	SUB	R3, R11, 52
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -56]
	LDR	R2, [R11, -52]
	MOV	R1, 0
	MOV	R0, 0
	BL	SUB64
	ADD	R13, R13, 8
L641
	LDR	R3, [R11, -44]
	SUB	R2, R3, 4
	LDRB	R3, [R11, -33]
	LDRB	R1, [R11, -35]
	EOR	R3, R3, R1
	AND	R1, R3, 255
	LDR	R3, [R11, -56]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -52]
	BL	NORMALIZEROUNDANDPACKFLOAT64
	ADD	R13, R13, 4
	B	L609
L609
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
	
END FLOAT64REM;

PROCEDURE FLOAT64SQRT;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R5, R6, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 88
	MOV	R4, R0
	STR	R1, [R11, -32]
	STR	R2, [R11, -28]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -52]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -48]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -33]
	LDR	R3, [R11, -40]
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L643
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L644
	LDR	R3, [R11, -28]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -32]
	MOV	R0, R4
	LDR	R1, [R11, -32]
	LDR	R2, [R11, -28]
	BL	PROPAGATEFLOAT64NAN
	ADD	R13, R13, 4
	B	L642
L644
	LDRB	R3, [R11, -33]	
	CMP	R3, 0
	BNE	L645
	LDR	R5, [R11, -32]
	LDR	R6, [R11, -28]
	STMIA	R4, {R5,R6}
	B	L642
L645
	B	L646
L643
	LDRB	R3, [R11, -33]	
	CMP	R3, 0
	BEQ	L647
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -48]
	ORR	R3, R3, R2
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L648
	LDR	R5, [R11, -32]
	LDR	R6, [R11, -28]
	STMIA	R4, {R5,R6}
	B	L642
L648
	MOV	R0, R0	
L646
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R3, 0
	STR	R3, [R11, -108]
	MOV	R3, 080000000H
	MOV	R3, R3, ASR 12
	STR	R3, [R11, -112]
	LDR	R5, [R11, -112]
	LDR	R6, [R11, -108]
	STMIA	R4, {R5,R6}
	B	L642
L647
	LDR	R3, [R11, -40]
	CMP	R3, 0
	BNE	L649
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -52]
	ORR	R3, R3, R2
	CMP	R3, 0
	BNE	L650
	MOV	R3, 0
	STR	R3, [R13, -4]!
	MOV	R0, R4
	MOV	R3, 0
	MOV	R2, 0
	MOV	R1, 0
	BL	PACKFLOAT64
	ADD	R13, R13, 4
	B	L642
L650
	SUB	R3, R11, 48
	SUB	R2, R11, 40
	SUB	R1, R11, 52
	STR	R1, [R13, -4]!
	LDR	R1, [R11, -52]
	LDR	R0, [R11, -48]
	BL	NORMALIZEFLOAT64SUBNORMAL
	ADD	R13, R13, 4
L649
	LDR	R2, [R11, -40]
	SUB	R3, R2, 1020
	SUB	R3, R3, 3
	MOV	R2, R3, ASR 1
	ADD	R3, R2, 1020
	ADD	R3, R3, 2
	STR	R3, [R11, -44]
	SUB	R3, R11, 48
	LDR	R2, [R11, -48]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 52
	STR	R2, [R13, -4]!
	MOV	R2, 11
	LDR	R1, [R11, -52]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -40]
	BL	ESTIMATESQRT32
	MOV	R3, R0
	STR	R3, [R11, -56]
	LDR	R3, [R11, -56]
	CMN	R3, 3
	BHI	L651
	LDR	R2, [R11, -56]
	ADD	R3, R2, 2
	B	L652
L651
	MVN	R3, 0
L652
	STR	R3, [R11, -56]
	LDR	R2, [R11, -40]
	AND	R3, R2, 1
	CMP	R3, 0
	BEQ	L653
	SUB	R3, R11, 48
	SUB	R2, R11, 52
	STR	R2, [R13, -4]!
	MOV	R2, 1
	LDR	R1, [R11, -52]
	LDR	R0, [R11, -48]
	BL	SHIFTDOWN64
	ADD	R13, R13, 4
L653
	SUB	R3, R11, 88
	SUB	R2, R11, 84
	LDR	R1, [R11, -56]
	LDR	R0, [R11, -56]
	BL	MUL32TO64
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -88]
	LDR	R2, [R11, -84]
	LDR	R1, [R11, -52]
	LDR	R0, [R11, -48]
	BL	SUB64
	ADD	R13, R13, 8
L654
	LDR	R3, [R11, -68]
	CMP	R3, 0
	BLT	L656
	B	L655
L656
	LDR	R2, [R11, -56]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -56]
	SUB	R3, R11, 84
	SUB	R2, R11, 88
	STR	R2, [R13, -4]!
	MOV	R2, 1
	LDR	R1, [R11, -56]
	MOV	R0, 0
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R3, [R11, -88]
	ORR	R2, R3, 1
	STR	R2, [R11, -88]
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	SUB	R3, R11, 68
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -88]
	LDR	R2, [R11, -84]
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	ADD64
	ADD	R13, R13, 8
	B	L654
L655
	SUB	R3, R11, 100
	SUB	R2, R11, 104
	STR	R2, [R13, -4]!
	MOV	R2, 31
	LDR	R1, [R11, -72]
	LDR	R0, [R11, -68]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	LDR	R2, [R11, -56]
	LDR	R1, [R11, -104]
	LDR	R0, [R11, -100]
	BL	ESTIMATEDIV64TO32
	MOV	R3, R0
	STR	R3, [R11, -60]
	LDR	R2, [R11, -60]
	MOV	R3, R2, LSL 22
	MOV	R3, R3, LSR 22
	CMP	R3, 5
	BHI	L657
	LDR	R3, [R11, -60]
	CMP	R3, 0
	BNE	L658
	MOV	R3, 1
	STR	R3, [R11, -60]
L658
	SUB	R3, R11, 92
	SUB	R2, R11, 88
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -56]
	BL	MUL32TO64
	SUB	R3, R11, 88
	SUB	R2, R11, 92
	STR	R2, [R13, -4]!
	MOV	R2, 1
	LDR	R1, [R11, -92]
	LDR	R0, [R11, -88]
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -92]
	LDR	R2, [R11, -88]
	MOV	R1, 0
	LDR	R0, [R11, -72]
	BL	SUB64
	ADD	R13, R13, 8
	SUB	R3, R11, 96
	SUB	R2, R11, 92
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -60]
	BL	MUL32TO64
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -96]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -92]
	STR	R3, [R13, -4]!
	MOV	R3, 0
	MOV	R2, 0
	LDR	R1, [R11, -76]
	LDR	R0, [R11, -72]
	BL	SUB96
	ADD	R13, R13, 20
L659
	LDR	R3, [R11, -72]
	CMP	R3, 0
	BLT	L661
	B	L660
L661
	LDR	R2, [R11, -60]
	SUB	R3, R2, 1
	MOV	R2, R3
	STR	R2, [R11, -60]
	SUB	R3, R11, 96
	STR	R3, [R13, -4]!
	SUB	R3, R11, 92
	STR	R3, [R13, -4]!
	SUB	R3, R11, 88
	STR	R3, [R13, -4]!
	MOV	R3, 1
	LDR	R2, [R11, -60]
	LDR	R1, [R11, -56]
	MOV	R0, 0
	BL	SHORTSHIFTUP96
	ADD	R13, R13, 12
	LDR	R3, [R11, -96]
	ORR	R2, R3, 1
	STR	R2, [R11, -96]
	SUB	R3, R11, 80
	STR	R3, [R13, -4]!
	SUB	R3, R11, 76
	STR	R3, [R13, -4]!
	SUB	R3, R11, 72
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -96]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -92]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -88]
	LDR	R2, [R11, -80]
	LDR	R1, [R11, -76]
	LDR	R0, [R11, -72]
	BL	ADD96
	ADD	R13, R13, 20
	B	L659
L660
	LDR	R3, [R11, -72]
	LDR	R2, [R11, -76]
	ORR	R3, R3, R2
	LDR	R2, [R11, -80]
	ORR	R3, R3, R2
	CMP	R3, 0
	MOVEQ	R3, 0
	MOVNE	R3, 1
	LDR	R2, [R11, -60]
	ORR	R3, R3, R2
	STR	R3, [R11, -60]
L657
	SUB	R3, R11, 64
	STR	R3, [R13, -4]!
	SUB	R3, R11, 60
	STR	R3, [R13, -4]!
	SUB	R3, R11, 56
	STR	R3, [R13, -4]!
	MOV	R3, 11
	MOV	R2, 0
	LDR	R1, [R11, -60]
	LDR	R0, [R11, -56]
	BL	SHIFTDOWN64EXTRAJAMMING
	ADD	R13, R13, 12
	LDR	R3, [R11, -64]
	STR	R3, [R13, -4]!
	LDR	R3, [R11, -60]
	STR	R3, [R13, -4]!
	MOV	R0, R4
	LDR	R3, [R11, -56]
	LDR	R2, [R11, -44]
	MOV	R1, 0
	BL	ROUNDANDPACKFLOAT64
	ADD	R13, R13, 8
	B	L642
L642
	MOV	R0, R4
	LDMEA	R11, {R4, R5, R6, R11, R13, R15}

	
	
	
	
END FLOAT64SQRT;

PROCEDURE FLOAT64EQ;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	STR	R2, [R11, -32]
	STR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L665
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L664
	B	L665
L665
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L663
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L664
	B	L663
L664
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L667
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L667
	B	L666
L667
	MOV	R0, 1
	BL	FLOATRAISE
L666
	MOV	R0, 0
	B	L662
L663
	MOV	R4, 0
	LDR	R3, [R11, -20]
	LDR	R2, [R11, -28]
	CMP	R3, R2
	BNE	L668
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -32]
	CMP	R3, R2
	BEQ	L669
	LDR	R2, [R11, -32]
	LDR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	BOTHZEROFLOAT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L669
	B	L668
L669
	MOV	R4, 1
L668
	MOV	R0, R4
	B	L662
L662
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64EQ;

PROCEDURE FLOAT64LE;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 36
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	STR	R2, [R11, -32]
	STR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L673
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L672
	B	L673
L673
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L671
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L672
	B	L671
L672
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L670
L671
	LDR	R3, [R11, -20]
	STR	R3, [R11, -40]
	LDR	R3, [R11, -24]
	STR	R3, [R11, -36]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -49]
	LDR	R3, [R11, -28]
	STR	R3, [R11, -48]
	LDR	R3, [R11, -32]
	STR	R3, [R11, -44]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -50]
	LDRB	R3, [R11, -49]	
	LDRB	R2, [R11, -50]	
	CMP	R3, R2
	BEQ	L674
	MOV	R4, 0
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BNE	L676
	LDR	R2, [R11, -32]
	LDR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	BOTHZEROFLOAT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L676
	B	L675
L676
	MOV	R4, 1
L675
	MOV	R0, R4
	B	L670
L674
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BEQ	L677
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	LE64
	MOV	R3, R0
	AND	R4, R3, 255
	B	L678
L677
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -44]
	LDR	R1, [R11, -40]
	LDR	R0, [R11, -36]
	BL	LE64
	MOV	R3, R0
	AND	R4, R3, 255
L678
	MOV	R0, R4
	B	L670
L670
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64LE;

PROCEDURE FLOAT64LT;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 36
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	STR	R2, [R11, -32]
	STR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L682
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L681
	B	L682
L682
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L680
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L681
	B	L680
L681
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L679
L680
	LDR	R3, [R11, -20]
	STR	R3, [R11, -40]
	LDR	R3, [R11, -24]
	STR	R3, [R11, -36]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -49]
	LDR	R3, [R11, -28]
	STR	R3, [R11, -48]
	LDR	R3, [R11, -32]
	STR	R3, [R11, -44]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -50]
	LDRB	R3, [R11, -49]	
	LDRB	R2, [R11, -50]	
	CMP	R3, R2
	BEQ	L683
	MOV	R4, 0
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BEQ	L684
	LDR	R2, [R11, -32]
	LDR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	BOTHZEROFLOAT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L684
	MOV	R4, 1
L684
	MOV	R0, R4
	B	L679
L683
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BEQ	L685
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	LT64
	MOV	R3, R0
	AND	R4, R3, 255
	B	L686
L685
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -44]
	LDR	R1, [R11, -40]
	LDR	R0, [R11, -36]
	BL	LT64
	MOV	R3, R0
	AND	R4, R3, 255
L686
	MOV	R0, R4
	B	L679
L679
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64LT;

PROCEDURE FLOAT64EQSIGNALING;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 16
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	STR	R2, [R11, -32]
	STR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L690
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L689
	B	L690
L690
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L688
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L689
	B	L688
L689
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L687
L688
	MOV	R4, 0
	LDR	R3, [R11, -20]
	LDR	R2, [R11, -28]
	CMP	R3, R2
	BNE	L691
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -32]
	CMP	R3, R2
	BEQ	L692
	LDR	R2, [R11, -32]
	LDR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	BOTHZEROFLOAT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L692
	B	L691
L692
	MOV	R4, 1
L691
	MOV	R0, R4
	B	L687
L687
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64EQSIGNALING;

PROCEDURE FLOAT64LEQUIET;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 36
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	STR	R2, [R11, -32]
	STR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L696
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L695
	B	L696
L696
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L694
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L695
	B	L694
L695
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L698
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L698
	B	L697
L698
	MOV	R0, 1
	BL	FLOATRAISE
L697
	MOV	R0, 0
	B	L693
L694
	LDR	R3, [R11, -20]
	STR	R3, [R11, -40]
	LDR	R3, [R11, -24]
	STR	R3, [R11, -36]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -49]
	LDR	R3, [R11, -28]
	STR	R3, [R11, -48]
	LDR	R3, [R11, -32]
	STR	R3, [R11, -44]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -50]
	LDRB	R3, [R11, -49]	
	LDRB	R2, [R11, -50]	
	CMP	R3, R2
	BEQ	L699
	MOV	R4, 0
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BNE	L701
	LDR	R2, [R11, -32]
	LDR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	BOTHZEROFLOAT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L701
	B	L700
L701
	MOV	R4, 1
L700
	MOV	R0, R4
	B	L693
L699
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BEQ	L702
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	LE64
	MOV	R3, R0
	AND	R4, R3, 255
	B	L703
L702
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -44]
	LDR	R1, [R11, -40]
	LDR	R0, [R11, -36]
	BL	LE64
	MOV	R3, R0
	AND	R4, R3, 255
L703
	MOV	R0, R4
	B	L693
L693
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64LEQUIET;

PROCEDURE FLOAT64LTQUIET;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R4, R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 36
	STR	R0, [R11, -24]
	STR	R1, [R11, -20]
	STR	R2, [R11, -32]
	STR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L707
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L706
	B	L707
L707
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	MOV	R2, 2032
	ADD	R2, R2, 15
	CMP	R3, R2
	BNE	L705
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R4, R0
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	ORR	R2, R4, R3
	CMP	R2, 0
	BNE	L706
	B	L705
L706
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L709
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	FLOAT64ISSIGNALINGNAN
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L709
	B	L708
L709
	MOV	R0, 1
	BL	FLOATRAISE
L708
	MOV	R0, 0
	B	L704
L705
	LDR	R3, [R11, -20]
	STR	R3, [R11, -40]
	LDR	R3, [R11, -24]
	STR	R3, [R11, -36]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -49]
	LDR	R3, [R11, -28]
	STR	R3, [R11, -48]
	LDR	R3, [R11, -32]
	STR	R3, [R11, -44]
	LDR	R0, [R11, -32]
	LDR	R1, [R11, -28]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -50]
	LDRB	R3, [R11, -49]	
	LDRB	R2, [R11, -50]	
	CMP	R3, R2
	BEQ	L710
	MOV	R4, 0
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BEQ	L711
	LDR	R2, [R11, -32]
	LDR	R3, [R11, -28]
	LDR	R0, [R11, -24]
	LDR	R1, [R11, -20]
	BL	BOTHZEROFLOAT64
	MOV	R3, R0
	AND	R2, R3, 255
	CMP	R2, 0
	BNE	L711
	MOV	R4, 1
L711
	MOV	R0, R4
	B	L704
L710
	LDRB	R3, [R11, -49]	
	CMP	R3, 0
	BEQ	L712
	LDR	R3, [R11, -40]
	LDR	R2, [R11, -36]
	LDR	R1, [R11, -48]
	LDR	R0, [R11, -44]
	BL	LT64
	MOV	R3, R0
	AND	R4, R3, 255
	B	L713
L712
	LDR	R3, [R11, -48]
	LDR	R2, [R11, -44]
	LDR	R1, [R11, -40]
	LDR	R0, [R11, -36]
	BL	LT64
	MOV	R3, R0
	AND	R4, R3, 255
L713
	MOV	R0, R4
	B	L704
L704
	LDMEA	R11, {R4, R11, R13, R15}

	
	
	
	
END FLOAT64LTQUIET;

PROCEDURE FLOAT64TOUINT32ROUNDTOZERO;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 40
	STR	R0, [R11, -20]
	STR	R1, [R11, -16]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64FRAC1
	MOV	R3, R0
	STR	R3, [R11, -40]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64FRAC0
	MOV	R3, R0
	STR	R3, [R11, -36]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64EXP
	MOV	R3, R0
	STR	R3, [R11, -28]
	LDR	R0, [R11, -20]
	LDR	R1, [R11, -16]
	BL	EXTRACTFLOAT64SIGN
	MOV	R3, R0
	STRB	R3, [R11, -21]
	LDRB	R3, [R11, -21]	
	CMP	R3, 0
	BEQ	L715
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L714
L715
	LDR	R2, [R11, -28]
	SUB	R3, R2, 1040
	SUB	R3, R3, 3
	STR	R3, [R11, -32]
	LDR	R3, [R11, -32]
	CMP	R3, 0
	BLT	L716
	LDR	R3, [R11, -32]
	CMP	R3, 11
	BLE	L717
	MVN	R3, 0
	STR	R3, [R11, -44]
	B	L718
L717
	SUB	R3, R11, 44
	LDR	R2, [R11, -36]
	ORR	R12, R2, 1048576
	SUB	R2, R11, 48
	STR	R2, [R13, -4]!
	LDR	R2, [R11, -32]
	LDR	R1, [R11, -40]
	MOV	R0, R12
	BL	SHORTSHIFTUP64
	ADD	R13, R13, 4
L718
	B	L719
L716
	LDR	R3, [R11, -28]
	MOV	R2, 1020
	ADD	R2, R2, 1
	CMP	R3, R2
	BGT	L720
	LDR	R3, [R11, -28]
	LDR	R2, [R11, -36]
	ORR	R3, R3, R2
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	STR	R3, [R11, -48]
	MOV	R3, 0
	STR	R3, [R11, -44]
	B	L721
L720
	LDR	R3, [R11, -36]
	ORR	R2, R3, 1048576
	STR	R2, [R11, -36]
	LDR	R2, [R11, -32]
	AND	R3, R2, 31
	LDR	R2, [R11, -36]
	MOV	R3, R2, LSL R3
	LDR	R2, [R11, -40]
	ORR	R3, R3, R2
	STR	R3, [R11, -48]
	LDR	R2, [R11, -32]
	RSB	R3, R2, 0
	LDR	R2, [R11, -36]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -44]
L721
L719
	LDR	R3, [R11, -44]
	STR	R3, [R11, -52]
	LDR	R3, [R11, -48]
	CMP	R3, 0
	BEQ	L722
	(* LDR	R3, L723 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L723 *) MOV R2, R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L722
	LDR	R0, [R11, -52]
	B	L714
L724
	
(*
L723
	.WORD	FLOATEXCEPTIONFLAGS
*)
L714
	LDMEA	R11, {R11, R13, R15}

	
	
	
	
END FLOAT64TOUINT32ROUNDTOZERO;

PROCEDURE FLOAT32TOUINT32ROUNDTOZERO;
CODE
	
	
	MOV	R12, R13
	STMFD	R13!, {R11, R12, R14, R15}
	SUB	R11, R12, 4
	SUB	R13, R13, 24
	STR	R0, [R11, -16]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32FRAC
	MOV	R3, R0
	STR	R3, [R11, -32]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32EXP
	MOV	R3, R0
	STR	R3, [R11, -24]
	LDR	R0, [R11, -16]
	BL	EXTRACTFLOAT32SIGN
	MOV	R3, R0
	STRB	R3, [R11, -17]
	LDR	R3, [R11, -24]
	SUB	R2, R3, 158
	STR	R2, [R11, -28]
	LDRB	R3, [R11, -17]	
	CMP	R3, 0
	BEQ	L726
	MOV	R0, 1
	BL	FLOATRAISE
	MOV	R0, 0
	B	L725
L726
	LDR	R3, [R11, -28]
	CMP	R3, 0
	BLE	L727
	MOV	R0, 1
	BL	FLOATRAISE
	MVN	R0, 0
	B	L725
	B	L728
L727
	LDR	R3, [R11, -24]
	CMP	R3, 126
	BGT	L729
	LDR	R3, [R11, -24]
	LDR	R2, [R11, -32]
	ORR	R3, R3, R2
	CMP	R3, 0
	BEQ	L730
	(* LDR	R3, L732 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L732 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L730
	MOV	R0, 0
	B	L725
L729
L728
	LDR	R2, [R11, -32]
	ORR	R3, R2, 8388608
	MOV	R2, R3, LSL 8
	STR	R2, [R11, -32]
	LDR	R2, [R11, -28]
	RSB	R3, R2, 0
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSR R3
	STR	R3, [R11, -36]
	LDR	R2, [R11, -28]
	AND	R3, R2, 31
	LDR	R2, [R11, -32]
	MOV	R3, R2, LSL R3
	CMP	R3, 0
	BEQ	L731
	(* LDR	R3, L732 *) ADDR R3, ExceptionFlags
	(* LDR	R2, L732 *) MOV R2,R3
	LDRB	R1, [R2, 0]
	ORR	R2, R1, 16
	MOV	R1, R2
	STRB	R1, [R3, 0]
L731
	LDR	R0, [R11, -36]
	B	L725
L733
	
(*
L732
	.WORD	FLOATEXCEPTIONFLAGS
*)
L725
	LDMEA	R11, {R11, R13, R15}	
END FLOAT32TOUINT32ROUNDTOZERO;






(* Wrapper-Procedures *)

(*-------------------------------------------------------------------------------
Software IEC/IEEE integer-to-floating-point conversion routines.
-------------------------------------------------------------------------------*)
PROCEDURE LIntToReal*(i : LONGINT) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,8]	(* i -> R0 *)
	BL	INT32TOFLOAT32
	LDR	FP,[SP],4
	LDR	PC,[SP],8
END LIntToReal;

PROCEDURE LIntToLReal*(i : LONGINT) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,8]	(* i -> R1 *)
	BL	INT32TOFLOAT64
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],8
END LIntToLReal;

(*-------------------------------------------------------------------------------
Software IEC/IEEE single-precision conversion routines.
-------------------------------------------------------------------------------*)
PROCEDURE RealToLInt*(r : REAL) : LONGINT;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,8]	(* r -> R0 *)
	BL	FLOAT32TOINT32ROUNDTOZERO
	LDR	FP,[SP],4
	LDR	PC,[SP],8
END RealToLInt;

PROCEDURE RealToLReal*(r : REAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,8]	(* r -> R1 *)
	BL	FLOAT32TOFLOAT64
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],8
END RealToLReal;

(*
int float32_to_int32_round_to_zero( float32 );
*)

(*-------------------------------------------------------------------------------
Software IEC/IEEE single-precision operations.
-------------------------------------------------------------------------------*)

PROCEDURE RealRoundToInt*(r : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,8]	(* r -> R0 *)
	BL	FLOAT32ROUNDTOINT
	LDR	FP,[SP],4
	LDR	PC,[SP],8
END RealRoundToInt;

PROCEDURE RealAdd*(r1,r2 : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32ADD
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealAdd;

PROCEDURE RealSub*(r1,r2 : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32SUB
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealSub;

PROCEDURE RealMul*(r1,r2 : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32MUL
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealMul;

PROCEDURE RealDiv*(r1,r2 : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32DIV
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealDiv;

PROCEDURE RealRem*(r1,r2 : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32REM
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealRem;

PROCEDURE RealSqrt*(r : REAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,8]	(* r -> R0 *)
	BL	FLOAT32SQRT
	LDR	FP,[SP],4
	LDR	PC,[SP],8
END RealSqrt;

PROCEDURE RealEq*(r1, r2 : REAL) : BOOLEAN;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32EQ
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealEq;

PROCEDURE RealLe*(r1, r2 : REAL) : BOOLEAN;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32LE
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealLe;

PROCEDURE RealLt*(r1, r2 : REAL) : BOOLEAN;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]	(* r1 -> R0 *)
	LDR	R1,[FP,8]	(* r2 -> R1 *)
	BL	FLOAT32LT
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END RealLt;

PROCEDURE RealNe*(r1, r2 : REAL) : BOOLEAN;
BEGIN RETURN ~RealEq(r1,r2) END RealNe;

PROCEDURE RealGe*(r1, r2 : REAL) : BOOLEAN;
BEGIN RETURN ~RealLt(r1,r2) END RealGe;

PROCEDURE RealGt*(r1, r2 : REAL) : BOOLEAN;
BEGIN RETURN ~RealLe(r1,r2) END RealGt;

(*
char float32_eq_signaling( float32, float32 );
char float32_le_quiet( float32, float32 );
char float32_lt_quiet( float32, float32 );
char float32_is_signaling_nan( float32 );
*)

(*------------------------------------------------------------------------------
Software IEC/IEEE double-precision conversion routines.
-------------------------------------------------------------------------------*)
PROCEDURE LRealToLInt*(r : LONGREAL) : LONGINT;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]
	LDR	R1,[FP,8]
	BL	FLOAT64TOINT32ROUNDTOZERO
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END LRealToLInt;

PROCEDURE LRealToReal*(r : LONGREAL) : REAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,12]
	LDR	R1,[FP,8]
	BL	FLOAT64TOFLOAT32
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END LRealToReal;

(*
int float64_to_int32_round_to_zero( float64 );
*)

(*-------------------------------------------------------------------------------
Software IEC/IEEE double-precision operations.
-------------------------------------------------------------------------------*)

PROCEDURE LRealRoundToInt*(r : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,12]	(* r -> R1/R2 *)
	LDR	R2,[FP,8]
	BL	FLOAT64ROUNDTOINT
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END LRealRoundToInt;

PROCEDURE LRealAdd*(r1,r2 : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,20]	
	LDR	R2,[FP,16] (* r1 -> R1/R2 *)
	LDR	R3,[FP,12]
	LDR	R4,[FP,8]
	STMFD	SP!,{R4} (* r2 -> R3/Stack *)
	BL	FLOAT64ADD
	ADD	SP,SP,4	(* remove args from stack *)
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealAdd;

PROCEDURE LRealSub*(r1,r2 : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,20]	
	LDR	R2,[FP,16] (* r1 -> R1/R2 *)
	LDR	R3,[FP,12]
	LDR	R4,[FP,8]
	STMFD	SP!,{R4} (* r2 -> R3/Stack *)
	BL	FLOAT64SUB
	ADD	SP,SP,4	(* remove args from stack *)
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealSub;

PROCEDURE LRealMul*(r1,r2 : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,20]	
	LDR	R2,[FP,16] (* r1 -> R1/R2 *)
	LDR	R3,[FP,12]
	LDR	R4,[FP,8]
	STMFD	SP!,{R4} (* r2 -> R3/Stack *)
	BL	FLOAT64MUL
	ADD	SP,SP,4	(* remove args from stack *)
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealMul;

PROCEDURE LRealDiv*(r1,r2 : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,20]	
	LDR	R2,[FP,16] (* r1 -> R1/R2 *)
	LDR	R3,[FP,12]
	LDR	R4,[FP,8]
	STMFD	SP!,{R4} (* r2 -> R3/Stack *)
	BL	FLOAT64DIV
	ADD	SP,SP,4	(* remove args from stack *)
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealDiv;

PROCEDURE LRealRem*(r1,r2 : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,20]	
	LDR	R2,[FP,16] (* r1 -> R1/R2 *)
	LDR	R3,[FP,12]
	LDR	R4,[FP,8]
	STMFD	SP!,{R4} (* r2 -> R3/Stack *)
	BL	FLOAT64REM
	ADD	SP,SP,4	(* remove args from stack *)
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealRem;

PROCEDURE LRealSqrt*(r : LONGREAL) : LONGREAL;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	SUB	SP,SP,8	(* make room for result *)
	MOV	R0,SP
	LDR	R1,[FP,12]	
	LDR	R2,[FP,8] (* r -> R1/R2 *)
	BL	FLOAT64SQRT
	LDMIA	SP!,{R1}
	LDMIA	SP!,{R0}	(* load result into R0/R1 *)
	LDR	FP,[SP],4
	LDR	PC,[SP],12
END LRealSqrt;

PROCEDURE LRealEq*(r1, r2 : LONGREAL) : BOOLEAN;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,20]	
	LDR	R1,[FP,16] (* r1 -> R0/R1 *)
	LDR	R2,[FP,12]
	LDR	R3,[FP,8] (* r2 -> R2/R3 *)
	BL	FLOAT64EQ
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealEq;

PROCEDURE LRealLe*(r1, r2 : LONGREAL) : BOOLEAN;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,20]	
	LDR	R1,[FP,16] (* r1 -> R0/R1 *)
	LDR	R2,[FP,12]
	LDR	R3,[FP,8] (* r2 -> R2/R3 *)
	BL	FLOAT64LE
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealLe;

PROCEDURE LRealLt*(r1, r2 : LONGREAL) : BOOLEAN;
CODE
	STMFD	SP!,{FP,LR}
	MOV	FP,SP
	LDR	R0,[FP,20]	
	LDR	R1,[FP,16] (* r1 -> R0/R1 *)
	LDR	R2,[FP,12]
	LDR	R3,[FP,8] (* r2 -> R2/R3 *)
	BL	FLOAT64LT
	LDR	FP,[SP],4
	LDR	PC,[SP],20
END LRealLt;

PROCEDURE LRealNe*(r1, r2 : LONGREAL) : BOOLEAN;
BEGIN RETURN ~LRealEq(r1,r2) END LRealNe;

PROCEDURE LRealGe*(r1, r2 : LONGREAL) : BOOLEAN;
BEGIN RETURN ~LRealLt(r1,r2) END LRealGe;

PROCEDURE LRealGt*(r1, r2 : LONGREAL) : BOOLEAN;
BEGIN RETURN ~LRealLe(r1,r2) END LRealGt;

(*
char float64_eq_signaling( float64, float64 );
char float64_le_quiet( float64, float64 );
char float64_lt_quiet( float64, float64 );
char float64_is_signaling_nan( float64 );
*)

PROCEDURE RealNeg*(r : REAL) : REAL;
BEGIN RETURN RealSub(0.0,r) END RealNeg;

PROCEDURE LRealNeg*(r : LONGREAL) : LONGREAL;
BEGIN RETURN LRealSub(0.0D1,r) END LRealNeg;


(*------------- Diverses -----------------------*)
PROCEDURE RealEntier*(r : REAL) : LONGINT;
VAR i : LONGINT;
BEGIN
	i:=RealToLInt(r);
	IF RealLt(r,0.0) & RealNe(LIntToReal(i),r) THEN RETURN i-1 END;
	RETURN i
END RealEntier;

PROCEDURE RealAbs*(r : REAL) : REAL;
BEGIN
	IF RealLt(r,0.0) THEN RETURN RealNeg(r) ELSE RETURN r END
END RealAbs;

PROCEDURE LRealEntier*(r : LONGREAL) : LONGINT;
VAR i : LONGINT;
BEGIN
	i:=LRealToLInt(r);
	IF LRealLt(r,0.0D0) & LRealNe(LIntToLReal(i),r) THEN RETURN i-1
	ELSE RETURN i
	END;
END LRealEntier;

PROCEDURE LRealAbs*(r : LONGREAL) : LONGREAL;
BEGIN
	IF LRealLt(r,0.0D0) THEN RETURN LRealNeg(r) ELSE RETURN r END
END LRealAbs;

BEGIN
	ExceptionFlags:=0; 
	RoundingMode:=RoundNearestEven; 
	DetectTininess:=TininessBeforeRounding; 
	OverflowExceptions:=FALSE;
	SysHalt:=SYSTEM.VAL(Kernel.Proc, Kernel.runtime[4]);
END SoftFloat.












